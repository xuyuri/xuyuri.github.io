<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yuri&#39;s Blog</title>
  <icon>http://www.gravatar.com/avatar/74937d1c876bc72ed274f68d77a77a07</icon>
  <subtitle>Walk step by step</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yurixu.com/"/>
  <updated>2018-05-29T13:42:18.290Z</updated>
  <id>http://yurixu.com/</id>
  
  <author>
    <name>Yurixu</name>
    <email>xywbupt@126.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySQL主从复制简述</title>
    <link href="http://yurixu.com/blog/2018/05/28/MySql%E4%B8%BB%E4%BB%8E%E5%90%8C%E6%AD%A5%E7%AE%80%E8%BF%B0/"/>
    <id>http://yurixu.com/blog/2018/05/28/MySql主从同步简述/</id>
    <published>2018-05-28T12:47:20.000Z</published>
    <updated>2018-05-29T13:42:18.290Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xrc03.com1.z0.glb.clouddn.com/201611/Mysql/mysql.jpg" alt=""></p><p>本文对MySQL主从复制的配置以及实现原理进行简述。</p><a id="more"></a><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>MySQL主从复制技术是指将主库中的数据复制到从数据库中，基本实现流程是将主库的操作写入二进制日志文件，将二进制日志文件传递到从库，在从库中重放日志中的操作过程，从而达到对主库的操作（增删改）同步更新至从库的目的。</p><h3 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h3><p>MySQL主从复制的方案主要有：主从复制、主主复制、多源复制等多种类型。<br><img src="http://7xrc03.com1.z0.glb.clouddn.com/201805/mysql/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E7%B1%BB%E5%9E%8B.png" alt=""></p><h3 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h3><ul><li>减轻负载<br>读写分离，主库写，从库读，降低主库压力；</li><li>确保安全<br>在从库进行数据备份，不影响主库服务和性能；</li><li>提升性能<br>主库出现异常时，切换到从库提供服务，缩短停机窗口；</li></ul><p><strong>多源复制技术</strong>（Multi-Source Replication）是从MySQL 5.7版本之后支持的复制技术，如上图中的类型⑤所示，即：将多个Master的数据汇聚到一台Slave上，这种复制类型除了上述优点外，还具有<sup>[1]</sup>：</p><ul><li>数据汇集<br>将多台主库的数据汇集到一台从库服务器，尤其对于分库分表的应用场景中，可以在从库中对数据做统一处理；</li><li>成本节约<br>在MySQL 5.7版本之前，对于1主1从或1主多从的复制方式，需要为每台主机配置相应1台备机，多源复制技术出现后，可以将多个从库进行数据合并，用一台备机进行备份；</li><li>集中备份<br>方便在一台服务器上对接收到的所有主库数据进行统一备份；</li><li>异地灾备<br>将从库放在距离远的地方，可用于异地备份；</li></ul><hr><h2 id="主从复制"><a href="#主从复制" class="headerlink" title="主从复制"></a>主从复制</h2><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><p><img src="http://7xrc03.com1.z0.glb.clouddn.com/201805/mysql/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E5%AE%9E%E7%8E%B0%E8%BF%87%E7%A8%8B.png" alt=""></p><p>MySQL主从复制的基本流程是：<br>Master服务器开启binlog日志功能，当Master数据发生变更时，将变更信息记录到binlog二进制日志文件中；<br>Slave服务器会开启I/O thread线程，连接到Master服务器，Master服务器开启Binlog Dump线程，检测Master服务器的二进制文件变化，若有新的变更记录产生，Binlog Dump线程将读取的二进制内容发送至Slave服务器，Slave服务器的I/O thread线程读取Binlog Dump线程发送过来的内容，并将其写入Slave服务器的中继日志文件relaylog中；<br>Slave服务器中的SQL thread线程会检测relaylog的变化，将Master上的变更事件在Slave服务器中进行重放操作，从而使Master服务器上的数据与Slave服务器一致。</p><p><strong>注意事项：</strong></p><ul><li>主从同步前主从服务器做好时间同步校对；</li><li>Master要开启binlog二进制日志功能，通常为了数据安全性考虑，Slave服务器最好也同时开启；</li><li>主从服务器的MySQL版本最好相同（若不相同，要保证Master 的版本低于Slave的版本）</li><li>主服务器要创建账号且拥有SLAVE权限</li><li>复制过程需要3个线程参与，其中Master服务器1个（Binlog Dump），Slave服务器2个（I/O thread、SQL thread）</li><li>同步前主从库中的数据要保持一致（可以在同步前将主库的数据导入从库）</li></ul><h3 id="配置流程"><a href="#配置流程" class="headerlink" title="配置流程"></a>配置流程</h3><p>假定Master和Slave服务器的IP分别为：<br>Master：192.168.1.100<br>Slave：192.168.1.101</p><p><strong>Master服务器：</strong></p><ul><li><p>创建用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">GRANT</span> <span class="keyword">REPLICATION</span> <span class="keyword">SLAVE</span>  <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'slave'</span>@<span class="string">'192.168.1.101'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'password'</span> ;</span></span><br><span class="line"><span class="operator"><span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>;</span></span><br></pre></td></tr></table></figure><p>  创建账号slave，添加SLAVE的权限，且只能从192.168.1.101登录，密码为password；如果要撤销同步账号的权限，执行：</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">REVOKE</span> <span class="keyword">REPLICATION</span> <span class="keyword">SLAVE</span> <span class="keyword">ON</span> *.* <span class="keyword">FROM</span> <span class="string">'slave'</span>@<span class="string">'192.168.1.101'</span>;</span></span><br></pre></td></tr></table></figure></li><li><p>修改MySQL配置<br>在[mysqld]配置项下添加：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">log-bin           = mysql-bin   <span class="comment">#[必须]启用二进制日志</span></span><br><span class="line">server-id         = <span class="number">1</span>           <span class="comment">#[必须]服务器唯一ID，默认是1</span></span><br><span class="line">expire-logs-days  = <span class="number">3</span>           <span class="comment">#只保留3天的二进制日志，以防磁盘被日志占满</span></span><br></pre></td></tr></table></figure><p>  重启MySQL服务</p></li><li><p>查看主库状态<br>在主库执行<code>show master status;</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show master status;</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| mysql-bin<span class="number">.000001</span> |  <span class="number">128</span> |              |                  |                   |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line"><span class="number">1</span> row in set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>  记录File和Position的值，在后续配置从库时会用到。</p></li></ul><p><strong>注意事项：</strong></p><ul><li><p>在主从同步前，需要保证主库和从库的数据一致，可以将主库数据导入到从库，在导出主库数据之前，先锁定主库：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">flush</span> <span class="keyword">tables</span> <span class="keyword">with</span> <span class="keyword">read</span> <span class="keyword">lock</span>;</span>    #数据库只读锁定命令，防止导出数据库的时候有数据写入。<span class="operator"><span class="keyword">unlock</span> <span class="keyword">tables</span>命令解除锁定</span></span><br></pre></td></tr></table></figure><p>  导出数据库命令：</p>  <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u用户名 -p密码 数据库名 &gt; 数据库名.sql</span><br></pre></td></tr></table></figure><p>  导入数据库命令：</p>  <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 首先创建数据库</span><br><span class="line">CREATE DATABASE `数据库名`;</span><br><span class="line"># 导入数据</span><br><span class="line">mysql -u用户名 -p密码 数据库名 &lt; 数据库名.sql</span><br></pre></td></tr></table></figure></li><li><p>建议不要在主库配置要同步的数据库和要忽略的数据库，只在从库上做限制，具体原因可参考：<a href="http://coolnull.com/3145.html" target="_blank" rel="external">《为什么mysql的binlog-do-db选项是危险的》</a>，同时关于binlog-do-db、 binlog-ignore-db、replicate-do-db、replicate-ignore-db的配置说明可参考：<a href="http://www.ywnds.com/?p=6945" target="_blank" rel="external">《MySQL主从复制过滤规则应用》</a></p></li></ul><p><strong>Slave服务器：</strong></p><ul><li><p>修改MySQL配置<br>在[mysqld]配置项下添加：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">log-bin               = mysql-bin           <span class="comment">#[建议]启用二进制日志</span></span><br><span class="line">server-id             = <span class="number">2</span>                   <span class="comment">#[必须]服务器唯一ID，不能与主库相同</span></span><br><span class="line">replicate-ignore-db   = mysql               <span class="comment">#[建议]不进行备份的数据库</span></span><br><span class="line">replicate-ignore-db   = information_schema  <span class="comment">#[建议]不进行备份的数据库</span></span><br><span class="line">replicate-ignore-db   = performation_schema <span class="comment">#[建议]不进行备份的数据库</span></span><br><span class="line">replicate-ignore-db   = sys                 <span class="comment">#[建议]不进行备份的数据库</span></span><br><span class="line"></span><br><span class="line">slave-skip-errors     = all                 <span class="comment">#跳过复制过程中的所有错误</span></span><br><span class="line">slave-net-timeout     = <span class="number">60</span>                  <span class="comment">#一定时间后从库没有收到主库发送的binlog会主动重连</span></span><br></pre></td></tr></table></figure></li><li><p>配置主从通信<br>在从库执行：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">CHANGE</span> <span class="keyword">MASTER</span> <span class="keyword">TO</span> MASTER_HOST=<span class="string">'192.168.1.100'</span>, MASTER_USER=<span class="string">'slave'</span>, MASTER_PASSWORD=<span class="string">'password'</span>, MASTER_LOG_FILE=<span class="string">'mysql-bin.000001'</span>, MASTER_LOG_POS=<span class="number">128</span>;</span></span><br></pre></td></tr></table></figure></li><li><p>开启同步<br>在从库执行：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">start</span> <span class="keyword">slave</span>;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><ul><li><p>线程验证<br>在主库执行：<code>SHOW FULL PROCESSLIST;</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SHOW FULL PROCESSLIST;</span><br><span class="line">+-------+-------+-----------------+------+-------------+------+---------------------------------------------------------------+-----------------------+</span><br><span class="line">| Id    | User  | Host            | db   | Command     | Time | State                                                         | Info                  |</span><br><span class="line">+-------+-------+-----------------+------+-------------+------+---------------------------------------------------------------+-----------------------+</span><br><span class="line">| <span class="number">18046</span> | slave | <span class="number">192.168</span><span class="number">.1</span><span class="number">.100</span>:<span class="number">60066</span> | <span class="keyword">NULL</span> | Binlog Dump |   <span class="number">14</span> | Master has sent all binlog to slave; waiting <span class="keyword">for</span> more updates | <span class="keyword">NULL</span>                  |</span><br><span class="line">| <span class="number">18047</span> | root  | localhost       | <span class="keyword">NULL</span> | Query       |    <span class="number">0</span> | starting                                                      | SHOW FULL PROCESSLIST |</span><br><span class="line">+-------+-------+-----------------+------+-------------+------+---------------------------------------------------------------+-----------------------+</span><br><span class="line"><span class="number">2</span> rows in set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>  可以看到Id为18046这条记录，用户为slave，状态：<code>Master has sent all binlog to slave; waiting for more updates</code>，表示主库已经开启了Binlog Dump线程；<br>在从库执行：<code>SHOW FULL PROCESSLIST;</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SHOW FULL PROCESSLIST;</span><br><span class="line">+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+</span><br><span class="line">| Id | User        | Host      | db   | Command | Time | State                                                  | Info                  |</span><br><span class="line">+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+</span><br><span class="line">|  <span class="number">1</span> | system user |           | <span class="keyword">NULL</span> | Connect |  <span class="number">853</span> | Slave has read all relay log; waiting <span class="keyword">for</span> more updates | <span class="keyword">NULL</span>                  |</span><br><span class="line">|  <span class="number">2</span> | system user |           | <span class="keyword">NULL</span> | Connect | <span class="number">2270</span> | Waiting <span class="keyword">for</span> master to send event                       | <span class="keyword">NULL</span>                  |</span><br><span class="line">|  <span class="number">7</span> | root        | localhost | <span class="keyword">NULL</span> | Query   |    <span class="number">0</span> | starting                                               | SHOW FULL PROCESSLIST |</span><br><span class="line">+----+-------------+-----------+------+---------+------+--------------------------------------------------------+-----------------------+</span><br><span class="line"><span class="number">3</span> rows in set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>  可以看到从库开启了2个用户为system user的线程，其中状态为<code>Slave has read all relay log; waiting for more updates</code>的线程为SQL thread，状态为<code>Waiting for master to send event</code>的线程为I/O thread；</p></li><li><p>状态验证<br>在从库执行：<code>SHOW SLAVE STATUS \G</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SHOW SLAVE STATUS \G</span><br><span class="line">*************************** <span class="number">1.</span> row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> master to send event</span><br><span class="line">                  Master_Host: <span class="number">192.168</span><span class="number">.1</span><span class="number">.100</span></span><br><span class="line">                  Master_User: slave</span><br><span class="line">                  Master_Port: <span class="number">3306</span></span><br><span class="line">                Connect_Retry: <span class="number">60</span></span><br><span class="line">              Master_Log_File: mysql-bin<span class="number">.000003</span></span><br><span class="line">          Read_Master_Log_Pos: <span class="number">4151663</span></span><br><span class="line">               Relay_Log_File: yurixu-relay-bin<span class="number">.000007</span></span><br><span class="line">                Relay_Log_Pos: <span class="number">322375</span></span><br><span class="line">        Relay_Master_Log_File: mysql-bin<span class="number">.000003</span></span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">              Replicate_Do_DB:</span><br><span class="line">          Replicate_Ignore_DB: mysql,information_schema,performation_schema,sys</span><br><span class="line">           Replicate_Do_Table:</span><br><span class="line">       Replicate_Ignore_Table:</span><br><span class="line">      Replicate_Wild_Do_Table:</span><br><span class="line">  Replicate_Wild_Ignore_Table:</span><br><span class="line">                   Last_Errno: <span class="number">0</span></span><br><span class="line">                   Last_Error:</span><br><span class="line">                 Skip_Counter: <span class="number">0</span></span><br><span class="line">          Exec_Master_Log_Pos: <span class="number">4151663</span></span><br><span class="line">              Relay_Log_Space: <span class="number">322583</span></span><br><span class="line">              Until_Condition: None</span><br><span class="line">               Until_Log_File:</span><br><span class="line">                Until_Log_Pos: <span class="number">0</span></span><br><span class="line">           Master_SSL_Allowed: No</span><br><span class="line">           Master_SSL_CA_File:</span><br><span class="line">           Master_SSL_CA_Path:</span><br><span class="line">              Master_SSL_Cert:</span><br><span class="line">            Master_SSL_Cipher:</span><br><span class="line">               Master_SSL_Key:</span><br><span class="line">        Seconds_Behind_Master: <span class="number">0</span></span><br><span class="line">Master_SSL_Verify_Server_Cert: No</span><br><span class="line">                Last_IO_Errno: <span class="number">0</span></span><br><span class="line">                Last_IO_Error:</span><br><span class="line">               Last_SQL_Errno: <span class="number">0</span></span><br><span class="line">               Last_SQL_Error:</span><br><span class="line">  Replicate_Ignore_Server_Ids:</span><br><span class="line">             Master_Server_Id: <span class="number">1</span></span><br><span class="line">                  Master_UUID: e1767343-c887-<span class="number">11e7</span>-<span class="number">9562</span>-<span class="number">560001432728</span></span><br><span class="line">             Master_Info_File: /<span class="keyword">var</span>/lib/mysql/master.info</span><br><span class="line">                    SQL_Delay: <span class="number">0</span></span><br><span class="line">          SQL_Remaining_Delay: <span class="keyword">NULL</span></span><br><span class="line">      Slave_SQL_Running_State: Slave has read all relay log; waiting <span class="keyword">for</span> more updates</span><br><span class="line">           Master_Retry_Count: <span class="number">86400</span></span><br><span class="line">                  Master_Bind:</span><br><span class="line">      Last_IO_Error_Timestamp:</span><br><span class="line">     Last_SQL_Error_Timestamp:</span><br><span class="line">               Master_SSL_Crl:</span><br><span class="line">           Master_SSL_Crlpath:</span><br><span class="line">           Retrieved_Gtid_Set:</span><br><span class="line">            Executed_Gtid_Set:</span><br><span class="line">                Auto_Position: <span class="number">0</span></span><br><span class="line">         Replicate_Rewrite_DB:</span><br><span class="line">                 Channel_Name:</span><br><span class="line">           Master_TLS_Version:</span><br><span class="line"><span class="number">1</span> row in set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>  <strong>Slave_IO_State:</strong> Waiting for master to send event： #当前从库的状态<br><strong>Slave_IO_Running：</strong> Yes                             #I/O线程是否运行<br><strong>Slave_SQL_Running：</strong> Yes                            #SQL线程是否运行<br><strong>Seconds_Behind_Master:</strong> 0                           #0表示主从库已同步</p><p>  Slave_IO_Running和Slave_SQL_Running必须均为YES，否则可以从以下几个方面排查 <sup>[2]</sup>：</p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> Master服务器和Slave是否可以ping通；</span><br><span class="line"><span class="number">2.</span> 配置主从通信时，用户名、密码、MASTER_LOG_POS等项是否正确；</span><br><span class="line"><span class="number">3.</span> MySQL的server-uuid是否相同；（如果是复制的MySQL，server-uuid是相同的）</span><br><span class="line">$ find / -name <span class="string">'auto.cnf'</span></span><br><span class="line">$ cat /<span class="keyword">var</span>/lib/mysql/auto.cnf</span><br><span class="line">[auto]</span><br><span class="line">server-uuid=<span class="number">6</span>b831bf3-<span class="number">8</span>ae7-<span class="number">11e7</span>-a178-<span class="number">000</span>c29cb5cbc <span class="comment"># 按照这个16进制格式，修改server-uuid，重启mysql即可</span></span><br></pre></td></tr></table></figure><ul><li>同步验证<br>在主库添加数据，登录从库，查看是否会同步过来。</li></ul><hr><h2 id="主主复制"><a href="#主主复制" class="headerlink" title="主主复制"></a>主主复制</h2><p>主主复制的实现过程与主从复制类似，主从复制一般只在主库执行写操作，在从库执行读操作；主主复制对应的两台服务器均可执行写操作，因此需要保证向数据库里插入数据的自增长ID不能相同，可以通过在两台服务器上添加参数，实现自增长ID互为奇数和偶数。<br>auto-increment-increment：自增起始值；<br>auto_increment_offset：自增偏移量；<br>因此主主复制时，两台服务器的auto_increment_offset均设置为2，auto-increment-increment分别设置为1和2。</p><h3 id="配置流程-1"><a href="#配置流程-1" class="headerlink" title="配置流程"></a>配置流程</h3><p><strong>Master1服务器：</strong></p><ul><li><p>创建用户<br>参考主从复制流程</p></li><li><p>修改MySQL配置<br>参考主从复制流程，且两台服务器均需要开启binlog日志，同时需要在[mysqld]配置项中增加：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auto-increment-increment = 1    </span><br><span class="line">auto-increment-offset = 2</span><br></pre></td></tr></table></figure><p>  重启MySQL服务</p></li><li><p>查看Master1状态<br>参考主从同步流程，记录File和Position的值。</p></li></ul><p><strong>Master2服务器：</strong></p><ul><li><p>创建用户<br>参考主从复制流程</p></li><li><p>修改MySQL配置<br>参考主从复制流程，且两台服务器均需要开启binlog日志，同时需要在[mysqld]配置项中增加：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auto-increment-increment = 2    </span><br><span class="line">auto-increment-offset = 2</span><br></pre></td></tr></table></figure><p>  重启MySQL服务</p></li><li><p>查看Master2状态<br>参考主从同步流程，记录File和Position的值。</p></li><li><p>配置通信<br>先在Master2数据库上做同步master的设置：（确保Master2上要同步的数据，提前在Master1上存在，最好双方数据保持一致）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">CHANGE</span> <span class="keyword">MASTER</span> <span class="keyword">TO</span> MASTER_HOST...</span><br><span class="line"><span class="keyword">START</span> <span class="keyword">SLAVE</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">show</span> <span class="keyword">slave</span> <span class="keyword">status</span> \<span class="keyword">G</span></span></span><br></pre></td></tr></table></figure><p>  这样就实现了Master2-&gt;Master1的同步；<br>再在Master1上做同步master的设置：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">CHANGE</span> <span class="keyword">MASTER</span> <span class="keyword">TO</span> MASTER_HOST...</span><br><span class="line"><span class="keyword">START</span> <span class="keyword">SLAVE</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">show</span> <span class="keyword">slave</span> <span class="keyword">status</span> \<span class="keyword">G</span></span></span><br></pre></td></tr></table></figure></li></ul><h3 id="验证-1"><a href="#验证-1" class="headerlink" title="验证"></a>验证</h3><p>参考主从复制流程</p><hr><h2 id="多源复制"><a href="#多源复制" class="headerlink" title="多源复制"></a>多源复制</h2><p>多源复制是将多个Master的数据同步至1台Slave中，配置流程与主从复制相似。<br>假定目前需要将Master1和Master2的数据同步至Slave中。<br>Master1：192.168.1.100<br>Master2：192.168.1.101<br>Slave：192.168.1.102</p><h3 id="配置流程-2"><a href="#配置流程-2" class="headerlink" title="配置流程"></a>配置流程</h3><p><strong>Master1服务器：</strong></p><ul><li>创建用户<br>参考主从复制流程</li><li>修改MySQL配置<br>参考主从复制流程</li><li>查看Master1状态<br>参考主从同步流程，记录File和Position的值。</li></ul><p><strong>Master2服务器：</strong></p><ul><li>创建用户<br>参考主从复制流程</li><li>修改MySQL配置<br>参考主从复制流程</li><li>查看Master1状态<br>参考主从同步流程，记录File和Position的值。</li></ul><p><strong>数据导出：</strong><br>分别将Master1和Master2中的数据库导出，并上传至Slave服务器；</p><p><strong>数据导入：</strong><br>在Slave上导入Master数据之前，需要先修改master_info_repository和relay_log_info_repository：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">master_info_repository=TABLE</span><br><span class="line">relay_log_info_repository=TABLE</span><br></pre></td></tr></table></figure></p><p>也可以在MySQL中通过命令行修改：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">SET</span> <span class="keyword">GLOBAL</span> master_info_repository = <span class="string">'TABLE'</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">SET</span> <span class="keyword">GLOBAL</span> relay_log_info_repository = <span class="string">'TABLE'</span>;</span></span><br></pre></td></tr></table></figure></p><p>具体原因可参官方说明：<a href="https://dev.mysql.com/doc/refman/5.7/en/slave-logs.html" target="_blank" rel="external">16.2.4 Replication Relay and Status Logs</a></p><p><strong>配置通信</strong><br>此处与主从复制流程中的配置通信稍有不同，在Slave中分别CHANGE MASTER到两台Master服务器，结尾以FOR CHANNEL ‘CHANNEL_NAME’区分：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">CHANGE</span> <span class="keyword">MASTER</span> <span class="keyword">TO</span> MASTER_HOST=<span class="string">'192.168.1.100'</span>, MASTER_USER=<span class="string">'slave'</span>, MASTER_PASSWORD=<span class="string">'password'</span>, MASTER_LOG_FILE=<span class="string">'mysql-bin.000001'</span>, MASTER_LOG_POS=<span class="number">128</span> <span class="keyword">FOR</span> CHANNEL <span class="string">'Master_1'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">CHANGE</span> <span class="keyword">MASTER</span> <span class="keyword">TO</span> MASTER_HOST=<span class="string">'192.168.1.101'</span>, MASTER_USER=<span class="string">'slave'</span>, MASTER_PASSWORD=<span class="string">'password'</span>, MASTER_LOG_FILE=<span class="string">'mysql-bin.000001'</span>, MASTER_LOG_POS=<span class="number">5638</span> <span class="keyword">FOR</span> CHANNEL <span class="string">'Master_2'</span>;</span></span><br></pre></td></tr></table></figure></p><p><strong>开启同步</strong><br>可以通过start slave 的方式启动所有复制，也可以单独指定启动某个数据源：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">start</span> <span class="keyword">slave</span> <span class="keyword">for</span> CHANNEL  <span class="string">'Master_1'</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">start</span> <span class="keyword">slave</span> <span class="keyword">for</span> CHANNEL  <span class="string">'Master_2'</span>;</span></span><br></pre></td></tr></table></figure><p>关闭同步也是如此。</p><h3 id="验证-2"><a href="#验证-2" class="headerlink" title="验证"></a>验证</h3><p>参考主从复制流程，其中在从库进行状态验证时，结尾以FOR CHANNEL ‘CHANNEL_NAME’区分：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">SHOW</span> <span class="keyword">SLAVE</span> <span class="keyword">STATUS</span> <span class="keyword">FOR</span> CHANNEL <span class="string">'Master_1'</span>\<span class="keyword">G</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">SLAVE</span> <span class="keyword">STATUS</span> <span class="keyword">FOR</span> CHANNEL <span class="string">'Master_2'</span>\<span class="keyword">G</span></span></span><br></pre></td></tr></table></figure></p><p>也可以查看数据库<code>performance_schema</code>的相关表查看同步状态：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM performance_schema.replication_connection_status \G</span><br><span class="line">*************************** <span class="number">1.</span> row ***************************</span><br><span class="line">             CHANNEL_NAME:</span><br><span class="line">               GROUP_NAME:</span><br><span class="line">              SOURCE_UUID: e1767343-c887-<span class="number">11e7</span>-<span class="number">9562</span>-<span class="number">560001432728</span></span><br><span class="line">                THREAD_ID: <span class="number">26</span></span><br><span class="line">            SERVICE_STATE: ON</span><br><span class="line">COUNT_RECEIVED_HEARTBEATS: <span class="number">240</span></span><br><span class="line"> LAST_HEARTBEAT_TIMESTAMP: <span class="number">2018</span>-<span class="number">05</span>-<span class="number">29</span> <span class="number">18</span>:<span class="number">57</span>:<span class="number">16</span></span><br><span class="line"> RECEIVED_TRANSACTION_SET:</span><br><span class="line">        LAST_ERROR_NUMBER: <span class="number">0</span></span><br><span class="line">       LAST_ERROR_MESSAGE:</span><br><span class="line">     LAST_ERROR_TIMESTAMP: <span class="number">0000</span>-<span class="number">00</span>-<span class="number">00</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line"><span class="number">1</span> row in set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></p><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><strong>常用命令：</strong><br>启动从库复制线程：start slave;<br>停止从库复制线程：stop slave;<br>查看主库运行状态：show master status;<br>查看从库运行状态：show slave status \G<br>查看从库主机列表：show slave hosts;<br>查看binlog文件列表：show binary logs;<br>查看第一个binlog文件内容：show binlog events;<br>查看指定binlog文件的内容：show binlog events in ‘mysql-bin.000001’;<br>查看指定binlog文件指定位置的内容：show binlog events in ‘mysql-bin.000001’ from 1625222 limit 10 \G</p><hr><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>[1] <a href="http://dbaplus.cn/news-11-790-1.html" target="_blank" rel="external">性能提升利器：MySQL 5.7多源主从复制的独特性</a><br>[2] <a href="https://segmentfault.com/a/1190000010867488#articleHeader0" target="_blank" rel="external">搭建 MySQL 5.7.19 主从复制，以及复制实现细节分析</a><br>[3] <a href="http://www.cnblogs.com/kevingrace/p/6256603.html" target="_blank" rel="external">Mysql主从同步(1)-主从/主主环境部署梳理</a><br>[4] <a href="http://www.cnblogs.com/xuanzhi201111/p/5151666.html" target="_blank" rel="external">MySQL 5.7的多源复制</a><br>[5] <a href="https://blog.csdn.net/zyw_java/article/details/72984112" target="_blank" rel="external">MySql 5.7.18 数据库主从（Master/Slave）同步安装与配置详解</a></p><p>转载请注明出处：<a href="http://yurixu.com/blog/2018/05/28/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E7%AE%80%E8%BF%B0">http://yurixu.com/blog/2018/05/28/MySQL主从复制简述</a></p>]]></content>
    
    <summary type="html">
    
      MySQL主从复制简述
    
    </summary>
    
      <category term="数据库" scheme="http://yurixu.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="MySQL" scheme="http://yurixu.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>PHP APCu简述</title>
    <link href="http://yurixu.com/blog/2018/05/22/PHP%20APCU%E7%AE%80%E8%BF%B0/"/>
    <id>http://yurixu.com/blog/2018/05/22/PHP APCU简述/</id>
    <published>2018-05-22T12:09:20.000Z</published>
    <updated>2018-05-23T02:57:35.040Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xrc03.com1.z0.glb.clouddn.com/201805/apcu/APCu.png" alt=""><br>本文对PHP的APCu扩展进行简述，并详细介绍其安装流程以及使用方法。</p><a id="more"></a><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>PHP是一种脚本语言，每次在程序运行前都需要将源程序预编译成中间语言，然后再由解释器执行，因此这种解释性语言的程序运行效率通常比编译型语言（例如：C、C++）要低，而如果程序代码没有变更，每次执行前的编译过程就会浪费一定的时间和资源，因此APC应运而生。</p><h3 id="APC"><a href="#APC" class="headerlink" title="APC"></a>APC</h3><p>APC（Alternative PHP Cache）是一种对PHP有效的高速缓冲储存器工具，可用于缓存和优化Web服务器上的PHP代码，改善服务器性能。<br>APC缓存包括：系统缓存和用户数据缓存；</p><p><strong>系统缓存：</strong> APC把PHP文件源码的编译结果进行缓存，每次调用时先对比时间标记，若缓存未过期，则直接使用缓存的中间代码运行（默认缓存1小时），但是这样仍会浪费大量的CPU时间，因此可以在php.ini配置文件中设置系统缓存用不过期（apc.ttl = 0），但是这样设置会导致每次修改代码后都需要重启WEB服务；</p><p><strong>用户数据缓存：</strong> 指用户在程序中主动使用apc_store写入和apc_fetch读取的缓存数据，建议在缓存数据量少时使用，在数据量大的情况下建议使用Redis或MemCache代替。<br>由于PHP5.3.*之后的版本自带php_opcache，因此不再需要apc的系统缓存功能，而且apc的3.1.14版本在PHP5.5版本上有严重的内存问题，被官方废弃。目前最新可用的apc版本为3.1.13，仅支持php 5.3.*</p><h3 id="APCu"><a href="#APCu" class="headerlink" title="APCu"></a>APCu</h3><p>APCu是APC的前身，它起到了缓存用户数据的作用。</p><hr><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>下载地址：<a href="https://pecl.php.net/package/APCu" target="_blank" rel="external">APCu</a><br>由于我的PHP版本为5.6因此，我下载的是4.0.11</p><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>下载4.0.11版本的dll，根据实际情况选择TS版还是NTS版本，将压缩包中的php_apcu.dll文件放置到PHP扩展目录ext下，并在php.ini文件尾部添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[APCu]&#10;extension=php_apcu.dll&#10;apc.enabled=1&#10;apc.shm_size=32M&#10;apc.ttl=7200&#10;apc.enable_cli=1&#10;apc.serializer=php</span><br></pre></td></tr></table></figure></p><p>重启Web服务，输出phpinfo信息，检测是否包含apcu的配置信息。</p><h3 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h3><p>下载4.0.11版本的tgz压缩包，解压缩后在代码目录中依次执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/phpize5.6&#10;./configure --with-php-config=/usr/bin/php-config5.6&#10;make&#10;make install</span><br></pre></td></tr></table></figure></p><p>注意：phpize和php-config根据实际情况设置<br>安装完成后在php.ini文件尾部添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[apc]&#10;extension = apcu.so&#10;apc.enabled= on&#10;apc.shm_size= 64M&#10;apc.enable_cli = on</span><br></pre></td></tr></table></figure></p><p>重启Web服务，输出phpinfo信息，检测是否包含apcu的配置信息。</p><hr><h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><h3 id="控制台"><a href="#控制台" class="headerlink" title="控制台"></a>控制台</h3><p>下载<a href="https://github.com/xuyuri/apcu/blob/master/apc.php" target="_blank" rel="external">apc.php</a>文件，修改用户名和密码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults(&#39;ADMIN_USERNAME&#39;,&#39;myname&#39;);             &#10;defaults(&#39;ADMIN_PASSWORD&#39;,&#39;mypassword&#39;);</span><br></pre></td></tr></table></figure></p><p>将apc.php文件置于WEB根目录下即可查看缓存详情：</p><p><img src="http://7xrc03.com1.z0.glb.clouddn.com/201805/apcu/APCu-detail.png" alt=""></p><h3 id="使用APCu"><a href="#使用APCu" class="headerlink" title="使用APCu"></a>使用APCu</h3><p><strong>函数列表：</strong></p><ul><li>apcu_add — Cache a new variable in the data store</li><li>apcu_cache_info — Retrieves cached information from APCu’s data store</li><li>apcu_cas — Updates an old value with a new value</li><li>apcu_clear_cache — Clears the APCu cache</li><li>apcu_dec — Decrease a stored number</li><li>apcu_delete — Removes a stored variable from the cache</li><li>apcu_entry — Atomically fetch or generate a cache entry</li><li>apcu_exists — Checks if entry exists</li><li>apcu_fetch — Fetch a stored variable from the cache</li><li>apcu_inc — Increase a stored number</li><li>apcu_sma_info — Retrieves APCu Shared Memory Allocation information</li><li>apcu_store — Cache a variable in the data store</li></ul><p><strong>示例：</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取缓存内容</span></span><br><span class="line"><span class="variable">$result</span> = apc_fetch(<span class="variable">$key</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$result</span>)) &#123;</span><br><span class="line">    <span class="variable">$result</span> = Test::model()-&gt;getList();</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$result</span>) ) &#123;</span><br><span class="line">        <span class="comment">//添加缓存内容</span></span><br><span class="line">        apc_add(<span class="variable">$key</span>, <span class="variable">$result</span>, <span class="number">120</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>转载请注明出处：<a href="http://yurixu.com/blog/2018/05/22/PHP-APCU%E7%AE%80%E8%BF%B0/">http://yurixu.com/blog/2018/05/22/PHP-APCU简述/</a></p>]]></content>
    
    <summary type="html">
    
      PHP APCu简述
    
    </summary>
    
      <category term="PHP" scheme="http://yurixu.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://yurixu.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>统计数据表各列非空值的数量</title>
    <link href="http://yurixu.com/blog/2016/11/10/%E7%BB%9F%E8%AE%A1%E6%95%B0%E6%8D%AE%E8%A1%A8%E5%90%84%E5%88%97%E9%9D%9E%E7%A9%BA%E5%80%BC%E7%9A%84%E6%95%B0%E9%87%8F/"/>
    <id>http://yurixu.com/blog/2016/11/10/统计数据表各列非空值的数量/</id>
    <published>2016-11-10T09:42:18.000Z</published>
    <updated>2018-05-22T02:15:12.181Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xrc03.com1.z0.glb.clouddn.com/201611/Mysql/mysql.jpg" alt=""><br>本文介绍如何统计数据表中每一列非空值的数量。<br><a id="more"></a></p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>Mysql数据中存在一张数据表A，A含有的数据列较多，例如包含100列，如何使用SQL统计出每一列中非空值的数量。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">BEGIN</span></span><br><span class="line"> <span class="keyword">DECLARE</span> done <span class="built_in">boolean</span> <span class="keyword">default</span> <span class="number">0</span>;</span> <span class="comment">/*标记循环结束*/</span></span><br><span class="line"> <span class="operator"><span class="keyword">DECLARE</span> field_name <span class="built_in">VARCHAR</span>(<span class="number">30</span>);</span><span class="comment">/*数据表字段名称*/</span></span><br><span class="line"> <span class="operator"><span class="keyword">DECLARE</span> <span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>);</span><span class="comment">/*数据表名称*/</span></span><br><span class="line"> <span class="operator"><span class="keyword">DECLARE</span> cur_record <span class="keyword">CURSOR</span> <span class="keyword">FOR</span> <span class="keyword">SELECT</span> COLUMN_NAME <span class="keyword">FROM</span> information_schema.<span class="keyword">COLUMNS</span> <span class="keyword">WHERE</span> table_name = <span class="keyword">name</span>;</span><span class="comment">/*定义游标，数据集为数据表字段集合*/</span></span><br><span class="line"> #<span class="operator"><span class="keyword">DECLARE</span> CONTINUE <span class="keyword">HANDLER</span> <span class="keyword">FOR</span> <span class="keyword">SQLSTATE</span> <span class="string">'02000'</span> <span class="keyword">SET</span> done = <span class="number">1</span>;</span><span class="comment">/*定义循环结束条件*/</span></span><br><span class="line"> <span class="operator"><span class="keyword">DECLARE</span> CONTINUE <span class="keyword">HANDLER</span> <span class="keyword">FOR</span> <span class="keyword">NOT</span> <span class="keyword">FOUND</span> <span class="keyword">SET</span> done = <span class="literal">TRUE</span>;</span><span class="comment">/*定义循环结束条件-同上*/</span></span><br><span class="line"> <span class="operator"><span class="keyword">SET</span> <span class="keyword">name</span> = <span class="string">'t_test_table'</span>;</span><span class="comment">/*数据表名称*/</span></span><br><span class="line"><span class="comment">/*临时数据表，存储数据表字段名称集合*/</span></span><br><span class="line"> <span class="operator"><span class="keyword">CREATE</span> <span class="keyword">TEMPORARY</span> <span class="keyword">TABLE</span> t_temp <span class="keyword">AS</span> <span class="keyword">SELECT</span> COLUMN_NAME <span class="keyword">AS</span> <span class="keyword">field</span>, <span class="number">0</span> <span class="keyword">AS</span> <span class="keyword">num</span> <span class="keyword">FROM</span> information_schema.<span class="keyword">COLUMNS</span> <span class="keyword">WHERE</span> table_name = <span class="keyword">name</span>;</span> </span><br><span class="line"></span><br><span class="line"> OPEN  cur_record; <span class="comment">/*打开游标*/</span></span><br><span class="line">   REPEAT</span><br><span class="line">     FETCH  cur_record INTO field_name; </span><br><span class="line">     <span class="comment">/*构造动态SQL*/</span></span><br><span class="line">     <span class="operator"><span class="keyword">SET</span> @<span class="keyword">sql</span> = <span class="keyword">CONCAT</span>(<span class="string">"UPDATE t_temp SET num = (SELECT COUNT(*) FROM "</span>, <span class="keyword">name</span>, <span class="string">" WHERE "</span>,field_name,<span class="string">" !='' ) WHERE field = '"</span>, field_name, <span class="string">"'"</span>);</span></span><br><span class="line">     <span class="operator"><span class="keyword">PREPARE</span> stm <span class="keyword">FROM</span> @<span class="keyword">sql</span>;</span></span><br><span class="line">     <span class="operator"><span class="keyword">EXECUTE</span> stm;</span></span><br><span class="line">     <span class="operator"><span class="keyword">DEALLOCATE</span> <span class="keyword">PREPARE</span> stm;</span></span><br><span class="line">   UNTIL done <span class="operator"><span class="keyword">END</span> <span class="keyword">REPEAT</span>;</span></span><br><span class="line"> CLOSE  cur_record;  <span class="comment">/*关闭游标*/</span></span><br><span class="line"></span><br><span class="line"> <span class="operator"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> t_temp;</span></span><br><span class="line"> <span class="operator"><span class="keyword">DROP</span> <span class="keyword">TEMPORARY</span> <span class="keyword">TABLE</span> t_temp;</span></span><br><span class="line"><span class="operator"><span class="keyword">END</span></span></span><br></pre></td></tr></table></figure><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p><strong>思路</strong>：<br>常规情况下统计数据表中某单个字段包含非空值的数量：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>( * ) send_name</span><br><span class="line"><span class="keyword">FROM</span>  <span class="string">`t_user_msg`</span> </span><br><span class="line"><span class="keyword">WHERE</span> send_name !=  <span class="string">''</span></span></span><br></pre></td></tr></table></figure></p><p>◆ 取数据表所有字段；<br>◆ 构造SQL动态获取每个字段对应的空值数量；<br>基于以上的思路，使用存储过程，结合游标的使用完成对问题的解决。</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li><p>如何获取数据表所有字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">SELECT</span> COLUMN_NAME <span class="keyword">FROM</span> information_schema.<span class="keyword">COLUMNS</span> <span class="keyword">WHERE</span> table_name = t_test_table;</span></span><br></pre></td></tr></table></figure></li><li><p>DECLARE语句定义的局部变量必须在游标或句柄之前，而句柄的定义必须在游标定义之后，否则会产生错误提示。 </p></li><li>Mysql不支持<code>select @varColumnName from  table</code> 类似自定义变量作为字段名或者表名的操作，因此需要CONCAT连接查询语句与自定义变量，构造动态SQL语句:<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">SET</span> @<span class="keyword">sql</span> = <span class="keyword">CONCAT</span>(<span class="string">"UPDATE t_temp SET num = (SELECT COUNT(*) FROM "</span>, <span class="keyword">name</span>, <span class="string">" WHERE "</span>,field_name,<span class="string">" !='' ) WHERE field = '"</span>, field_name, <span class="string">"'"</span>);</span>        <span class="comment">/*构造动态SQL*/</span></span><br><span class="line">     <span class="operator"><span class="keyword">PREPARE</span> stm <span class="keyword">FROM</span> @<span class="keyword">sql</span>;</span></span><br><span class="line">     <span class="operator"><span class="keyword">EXECUTE</span> stm;</span>   </span><br><span class="line">     <span class="operator"><span class="keyword">DEALLOCATE</span> <span class="keyword">PREPARE</span> stm;</span></span><br></pre></td></tr></table></figure></li></ul><p>转载请注明出处：<a href="http://yurixu.com/blog/2016/11/10/统计数据表各列非空值的数量/">http://yurixu.com/blog/2016/09/02/FFmpeg音视频转换</a></p><p>— 完结 —</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xrc03.com1.z0.glb.clouddn.com/201611/Mysql/mysql.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;本文介绍如何统计数据表中每一列非空值的数量。&lt;br&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://yurixu.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Mysql" scheme="http://yurixu.com/tags/Mysql/"/>
    
      <category term="存储过程" scheme="http://yurixu.com/tags/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Postman接口调试工具使用简介</title>
    <link href="http://yurixu.com/blog/2016/09/06/Postman-%E6%8E%A5%E5%8F%A3%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B/"/>
    <id>http://yurixu.com/blog/2016/09/06/Postman-接口调试工具使用简介/</id>
    <published>2016-09-06T01:26:05.000Z</published>
    <updated>2018-05-22T02:15:12.180Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xrc03.com1.z0.glb.clouddn.com/201609/Postman/postman.jpg" alt=""><br>本文介绍一款功能强大的网页接口调试与请求构造的Chrome浏览器插件。<br><a id="more"></a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在接口开发过程中往往需要构造请求并跟踪接口响应结果，Postman可以完全满足这个要求。Postman是一款Chrome插件,可以用来构造网页请求，还可以将构造的请求地址保存至Collections，同时借助插件Postman Interceptor还可以实现捕获网页请求至Postman，实现携带cookie请求接口。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>Postman下载地址：<a href="https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop?utm_source=chrome-ntp-icon" target="_blank" rel="external">Postman</a><br>Postman Interceptor下载地址：<a href="https://chrome.google.com/webstore/detail/postman-interceptor/aicmkgpgakddgnaphhhpliifpcfhicfo?utm_source=chrome-ntp-icon" target="_blank" rel="external">Postman Interceptor</a></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>Postman的主要界面如下图所示：<br><img src="http://7xrc03.com1.z0.glb.clouddn.com/201609/Postman/Postman%E7%95%8C%E9%9D%A2.png" alt="Postman界面"><br>①：请求的历史记录。同时插件Postman Interceptor也会将浏览器中捕获的接口地址置于该页卡下；<br>②：Collections类似于文件夹，内部还可以继续创建文件夹，可以将接口地址根据需要放置到不同的文件夹下方便管理；<br>③：Collections下分三个子页卡，ALL对应全部接口文件夹；ME对应本人私有的接口文件夹；Team对应团队接口文件夹，在进行团队接口开发时可以方便管理；<br>④：Collections的新建以及排序；<br>⑤：Interceptor：拦截器，配合插件Postman Interceptor使用。在插件Postman Interceptor和Postman中同时打开请求拦截，即可以实现将浏览器中的接口拦截到Postman中；<br>⑥：可以设置并查看全局变量；<br>⑦：设置不同的请求方式；<br>⑧：设置请求链接；<br>⑨：可以将接口保存到Collections；<br>10-14可以设置发送请求的相关参数；<br>⑩：设置鉴权参数，例如：OAuth 1.0，OAuth 2.0等；<br>⑪：设置请求头；<br>⑫：设置请求体；<br>⑬：在发起请求前执行的脚本；<br>⑭：设置测试用例；<br>⑮：将请求生成不同语言对应的代码<br><img src="http://7xrc03.com1.z0.glb.clouddn.com/201609/Postman/Postman-Language.png" alt=""><br>⑯：Presets，在设置请求头Headers时使用，可以预先设定请求头，在构造请求的时候方便直接使用。例如在构造Ajax的POST请求时，需要经常添加X-Requested-With:XMLHttpRequest头，可以预先设置保存到Presets；<br>⑰：17是一系列请求响应的内容，包括响应体、cookie、响应头以及测试用例执行结果；<br>⑱：返回结果的展现方式，Pretty是格式化后的Json数据；Raw是原始数据；Preview以HTML的方式预览；</p><h2 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h2><p>Postman Interceptor对Postman现有功能进行了增强，可以实现捕获浏览器请求，并且实现对请求的过滤。使用方法非常简单，在Postman中开启Interceptor（界面⑤所示），在Postman Interceptor的Request Capture中选择ON，即可将捕获的请求接口展现到Postman的History页卡中，同时Postman Interceptor的Filter requests可以对接口进行过滤，例如配置<code>http://yurixu.com/.*</code>，这样只会捕获<a href="yurixu.com">yurixu.com</a>下的接口。</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>①：<a href="https://www.getpostman.com/docs/pre_request_scripts" target="_blank" rel="external">Pre-request Script</a><br>用于在发送请求前执行相关的JavaScript代码，例如可以在发送请求头中设置时间戳或者发送一个随机的字符串。<br>②：<a href="https://www.getpostman.com/docs/writing_tests" target="_blank" rel="external">Tests</a><br>Testes可以设置各种测试用例，例如检查响应状态码、响应串、验证JSON、检查Header等。<br>③：Runner<br>Collection Runner相当于一个执行接口集，在设置好测试用例后，就可以使用Collection Runner对接口进行同时请求。</p><p>参考文献：<br>[1] <a href="https://www.sdk.cn/news/1037" target="_blank" rel="external">API自动化测试利器——Postman</a></p><p>— 完结 —</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xrc03.com1.z0.glb.clouddn.com/201609/Postman/postman.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;本文介绍一款功能强大的网页接口调试与请求构造的Chrome浏览器插件。&lt;br&gt;
    
    </summary>
    
      <category term="工具" scheme="http://yurixu.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="PHP" scheme="http://yurixu.com/tags/PHP/"/>
    
      <category term="Sublime" scheme="http://yurixu.com/tags/Sublime/"/>
    
  </entry>
  
  <entry>
    <title>FFmpeg音视频转换</title>
    <link href="http://yurixu.com/blog/2016/09/02/FFmpeg%E9%9F%B3%E8%A7%86%E9%A2%91%E8%BD%AC%E6%8D%A2/"/>
    <id>http://yurixu.com/blog/2016/09/02/FFmpeg音视频转换/</id>
    <published>2016-09-02T12:37:04.000Z</published>
    <updated>2018-05-22T02:15:12.179Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xrc03.com1.z0.glb.clouddn.com/201609/FFmpeg/FFmpeg.png" alt=""><br>本文介绍如何在Linux服务器安装FFmpeg并完成音频转码。<br><a id="more"></a></p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>微信语音以amr格式存储，但是目前大部分浏览器并不支持该视频格式在浏览器内直接播放，需要将其转换为mp3格式，下面记录在Linux服务器上正确安装FFmpeg的过程。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>◆ 安装 <a href="http://lame.sourceforge.net/download.php" target="_blank" rel="external">Lame</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf lame-<span class="number">3.99</span><span class="number">.5</span>.tar.gz</span><br><span class="line">cd lame-<span class="number">3.99</span><span class="number">.5</span></span><br><span class="line">./configure --enable-shared</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure></p><p>◆ 安装 <a href="https://ffmpeg.org/download.html" target="_blank" rel="external">FFmpeg</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -jxvf ffmpeg-<span class="number">3.1</span><span class="number">.3</span>.tar.bz2</span><br><span class="line">cd ffmpeg-<span class="number">3.1</span><span class="number">.3</span></span><br><span class="line">./configure --enable-shared --disable-yasm --enable-libmp3lame</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure></p><p>◆ 修改服务器配置<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ld.so.conf 在文件末尾添加/usr/local/lib</span><br><span class="line">ldconfig -v</span><br></pre></td></tr></table></figure></p><p>◆ 音频转换<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i test.amr out.mp3</span><br></pre></td></tr></table></figure></p><p>转换过程输出内容：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg version <span class="number">3.1</span><span class="number">.3</span> Copyright (c) <span class="number">2000</span>-<span class="number">2016</span> the FFmpeg developers</span><br><span class="line">  built with gcc <span class="number">4.4</span><span class="number">.6</span> (GCC) <span class="number">20110731</span> (Red Hat <span class="number">4.4</span><span class="number">.6</span>-<span class="number">3</span>)</span><br><span class="line">  configuration: --enable-shared --disable-yasm --enable-libmp3lame</span><br><span class="line">  libavutil      <span class="number">55.</span> <span class="number">28.100</span> / <span class="number">55.</span> <span class="number">28.100</span></span><br><span class="line">  libavcodec     <span class="number">57.</span> <span class="number">48.101</span> / <span class="number">57.</span> <span class="number">48.101</span></span><br><span class="line">  libavformat    <span class="number">57.</span> <span class="number">41.100</span> / <span class="number">57.</span> <span class="number">41.100</span></span><br><span class="line">  libavdevice    <span class="number">57.</span>  <span class="number">0.101</span> / <span class="number">57.</span>  <span class="number">0.101</span></span><br><span class="line">  libavfilter     <span class="number">6.</span> <span class="number">47.100</span> /  <span class="number">6.</span> <span class="number">47.100</span></span><br><span class="line">  libswscale      <span class="number">4.</span>  <span class="number">1.100</span> /  <span class="number">4.</span>  <span class="number">1.100</span></span><br><span class="line">  libswresample   <span class="number">2.</span>  <span class="number">1.100</span> /  <span class="number">2.</span>  <span class="number">1.100</span></span><br><span class="line">[amr @ <span class="number">0x1575360</span>] Estimating duration from bitrate, this may be inaccurate</span><br><span class="line">Input <span class="comment">#0, amr, from 'test.amr':</span></span><br><span class="line">  Duration: <span class="number">00</span>:<span class="number">00</span>:<span class="number">01.56</span>, bitrate: <span class="number">5</span> kb/s</span><br><span class="line">    Stream <span class="comment">#0:0: Audio: amr_nb (samr / 0x726D6173), 8000 Hz, mono, flt</span></span><br><span class="line">[mp3 @ <span class="number">0x1587140</span>] Using AVStream.codec to pass codec parameters to muxers is deprecated, <span class="keyword">use</span> <span class="title">AVStream</span>.<span class="title">codecpar</span> <span class="title">instead</span>.</span><br><span class="line"><span class="title">Output</span> #0, <span class="title">mp3</span>, <span class="title">to</span> '<span class="title">out</span>.<span class="title">mp3</span>':</span><br><span class="line">  <span class="title">Metadata</span>:</span><br><span class="line">    <span class="title">TSSE</span>            : <span class="title">Lavf57</span>.41.100</span><br><span class="line">    <span class="title">Stream</span> #0:0: <span class="title">Audio</span>: <span class="title">mp3</span> (<span class="title">libmp3lame</span>), 8000 <span class="title">Hz</span>, <span class="title">mono</span>, <span class="title">fltp</span></span><br><span class="line">    <span class="title">Metadata</span>:</span><br><span class="line">      <span class="title">encoder</span>         : <span class="title">Lavc57</span>.48.101 <span class="title">libmp3lame</span></span><br><span class="line"><span class="title">Stream</span> <span class="title">mapping</span>:</span><br><span class="line">  <span class="title">Stream</span> #0:0 -&gt; #0:0 (<span class="title">amr_nb</span> (<span class="title">amrnb</span>) -&gt; <span class="title">mp3</span> (<span class="title">libmp3lame</span>))</span><br><span class="line"><span class="title">Press</span> [<span class="title">q</span>] <span class="title">to</span> <span class="title">stop</span>, [?] <span class="title">for</span> <span class="title">help</span></span><br><span class="line"><span class="title">test</span>.<span class="title">amr</span>: <span class="title">Input</span>/<span class="title">output</span> <span class="title">error</span></span><br><span class="line"><span class="title">size</span>=       2<span class="title">kB</span> <span class="title">time</span>=00:00:01.58 <span class="title">bitrate</span>=  10.0<span class="title">kbits</span>/<span class="title">s</span> <span class="title">speed</span>= 193<span class="title">x</span></span><br><span class="line"><span class="title">video</span>:0<span class="title">kB</span> <span class="title">audio</span>:2<span class="title">kB</span> <span class="title">subtitle</span>:0<span class="title">kB</span> <span class="title">other</span> <span class="title">streams</span>:0<span class="title">kB</span> <span class="title">global</span> <span class="title">headers</span>:0<span class="title">kB</span> <span class="title">muxing</span> <span class="title">overhead</span>: 15.104167%</span><br></pre></td></tr></table></figure></p><h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><p>◆ <strong>yasm/nasm not found or too old. Use –disable-yasm for a crippled build.</strong><br>执行./configure时出现该错误，则使用<code>--disable-yasm</code></p><p>◆ <strong>error while loading shared libraries: libavdevice.so.52</strong><br>在执行音频转换命令时报错，原因是缺少了上文中提到的<strong>修改服务器配置</strong>过程。</p><p>◆ <strong>Encoder (codec mp3) not found for output stream #0:0</strong><br>在执行音频转换命令时报错，原因是没有安装Lame。</p><p>转载请注明出处：<a href="http://yurixu.com/blog/2016/09/02/FFmpeg音视频转换/">http://yurixu.com/blog/2016/09/02/FFmpeg音视频转换</a></p><p>— 完结 —</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xrc03.com1.z0.glb.clouddn.com/201609/FFmpeg/FFmpeg.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;本文介绍如何在Linux服务器安装FFmpeg并完成音频转码。&lt;br&gt;
    
    </summary>
    
      <category term="工具" scheme="http://yurixu.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="FFmpeg" scheme="http://yurixu.com/tags/FFmpeg/"/>
    
      <category term="PHP" scheme="http://yurixu.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Sublime Text 3 编译运行PHP</title>
    <link href="http://yurixu.com/blog/2016/08/30/Sublime-Text-3-%E7%BC%96%E8%AF%91%E8%BF%90%E8%A1%8CPHP/"/>
    <id>http://yurixu.com/blog/2016/08/30/Sublime-Text-3-编译运行PHP/</id>
    <published>2016-08-30T13:30:23.000Z</published>
    <updated>2018-05-22T02:15:12.179Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xrc03.com1.z0.glb.clouddn.com/201609/Sublime/sublime-text.png" alt=""><br>本文介绍如何在Sublime Text 3中运行PHP代码。<br><a id="more"></a></p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>◆ Windows环境下确保PHP已经添加到环境变量<br>◆ 添加PHP编译系统<br>选择：工具——&gt;编译系统——&gt;新编译系统<br><img src="http://7xrc03.com1.z0.glb.clouddn.com/201609/Sublime/Sublime.png" alt=""><br>新建的编译系统默认内容为：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"shell_cmd"</span>: <span class="string">"make"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>修改内容如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"cmd"</span>: [<span class="string">"php"</span>, <span class="string">"$file"</span>], </span><br><span class="line">    <span class="string">"file_regex"</span>: <span class="string">"php$"</span>, </span><br><span class="line">    <span class="string">"selector"</span>: <span class="string">"source.php"</span>,</span><br><span class="line">    <span class="string">"encoding"</span>:<span class="string">"cp936"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><font color="red">注意：</font>最后的encoding设置为cp936，否则在执行PHP代码时可能会因为编码问题导致错误提示：<br><code>Decode error - output not utf-8</code><br>如果出现：<br><code>Decode error - output not cp936</code><br>可以尝试将encourage设置为utf-8</p><p>转载请注明出处：<a href="http://yurixu.com/blog/2016/08/30/Sublime Text 3 编译运行PHP/">http://yurixu.com/blog/2016/08/30/Sublime Text 3 编译运行PHP</a></p><p>— 完结 —</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xrc03.com1.z0.glb.clouddn.com/201609/Sublime/sublime-text.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;本文介绍如何在Sublime Text 3中运行PHP代码。&lt;br&gt;
    
    </summary>
    
      <category term="工具" scheme="http://yurixu.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="PHP" scheme="http://yurixu.com/tags/PHP/"/>
    
      <category term="Sublime" scheme="http://yurixu.com/tags/Sublime/"/>
    
  </entry>
  
  <entry>
    <title>微信支付系列文章导航</title>
    <link href="http://yurixu.com/blog/2016/08/21/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E7%B3%BB%E5%88%97%E6%96%87%E7%AB%A0%E5%AF%BC%E8%88%AA/"/>
    <id>http://yurixu.com/blog/2016/08/21/微信支付系列文章导航/</id>
    <published>2016-08-21T08:01:32.000Z</published>
    <updated>2018-05-22T02:15:12.177Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xrc03.com1.z0.glb.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98.jpeg" alt=""><br><a href="http://yurixu.com/blog/2016/06/28/%E6%BC%AB%E8%B0%88%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98/">漫谈微信支付</a><br><a href="http://yurixu.com/blog/2016/07/15/%E6%BC%AB%E8%B0%88%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98-%E6%89%AB%E7%A0%81%E6%94%AF%E4%BB%98/">漫谈微信支付-扫码支付</a><br><a href="http://yurixu.com/blog/2016/07/22/%E6%BC%AB%E8%B0%88%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98-APP%E6%94%AF%E4%BB%98/">漫谈微信支付-APP支付</a><br><a href="http://yurixu.com/blog/2016/08/16/漫谈微信支付-公共号支付/">漫谈微信支付-公共号支付</a><br><a href="http://yurixu.com/blog/2016/08/21/漫谈微信支付-授权目录设置/">漫谈微信支付-授权目录设置</a></p><p>转载请注明出处：<a href="http://yurixu.com/blog/2016/08/21/微信支付系列文章导航/">http://yurixu.com/blog/2016/08/21/微信支付系列文章导航/</a></p><p>— 完结 —</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://7xrc03.com1.z0.glb.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98.jpeg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;a href=&quot;http://yurixu.com/blog/201
      
    
    </summary>
    
      <category term="PHP" scheme="http://yurixu.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://yurixu.com/tags/PHP/"/>
    
      <category term="支付" scheme="http://yurixu.com/tags/%E6%94%AF%E4%BB%98/"/>
    
  </entry>
  
  <entry>
    <title>漫谈微信支付-授权目录设置</title>
    <link href="http://yurixu.com/blog/2016/08/21/%E6%BC%AB%E8%B0%88%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98-%E6%8E%88%E6%9D%83%E7%9B%AE%E5%BD%95%E8%AE%BE%E7%BD%AE/"/>
    <id>http://yurixu.com/blog/2016/08/21/漫谈微信支付-授权目录设置/</id>
    <published>2016-08-21T08:00:53.000Z</published>
    <updated>2018-05-22T02:15:12.177Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xrc03.com1.z0.glb.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98.jpeg" alt=""><br>本文对公共号支付的支付授权目录设置进行介绍并给出了一种解决单应用H5页面下授权目录不生效的方法。<br><a id="more"></a></p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>支付授权目录设置是完成微信公共号支付的关键步骤，如果设置不合理会导致无法完成支付，遇到的最常见的错误就是URL未注册。目前微信限制正式支付授权目录最多为3个，如果发起支付的页面地址超出3个该怎么办？<br>首先看一下微信官方文档对授权支付目录的设置介绍：<font color="#0099ff" size="3" face="楷体"><br>1、<strong>设置测试目录</strong><br>在微信公众平台设置，栏目见图7.7。支付测试状态下，设置测试目录，测试人的微信号添加到白名单，发起支付的页面目录必须与设置的精确匹配。并将支付链接发到对应的公众号会话窗口中才能正常发起支付测试。注意正式目录一定不能与测试目录设置成一样，否则支付会出错。<br><img src="http://7xrc03.com1.z0.glb.clouddn.com/%E5%BE%AE%E4%BF%A1%E5%86%85%E7%BD%91%E9%A1%B5%E6%94%AF%E4%BB%98%E8%AE%BE%E7%BD%AE%E6%A0%8F%E7%9B%AE%E5%85%A5%E5%8F%A3.png" alt="图7.7 微信内网页支付设置栏目入口"><br>2、<strong>设置正式支付目录</strong><br>根据图中栏目顺序进入修改栏目，勾选JSAPI网页支付开通该权限，并配置好支付授权目录，该目录必须是发起支付的页面的精确目录，子目录下无法正常调用支付。具体界面如图7.8所示：<br><img src="http://7xrc03.com1.z0.glb.clouddn.com/%E5%BE%AE%E4%BF%A1%E7%BD%91%E9%A1%B5%E5%86%85%E6%94%AF%E4%BB%98%E6%8E%A5%E5%8F%A3%E6%8E%88%E6%9D%83%E7%9B%AE%E5%BD%95%E8%AE%BE%E7%BD%AE.png" alt="图7.8 微信网页内支付接口授权目录设置"></font><br>微信指明发起支付的页面目录必须与设置的精确匹配，但是在实际开发中因为授权目录导致的URL未注册错误层出不穷，而且IOS和Android系统在获取当前支付页面时也不同，导致无法正常支付。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>项目中H5前端选用的是基于Angularjs的单页面应用(SPA)，所有页面的地址都会带有Hash值，体现在URL中就是带有/#!/，最初我在公共号后台也是配置了3个授权目录：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//<span class="label">XXX.com/#!/user/</span></span></span><br><span class="line">http:<span class="comment">//<span class="label">XXX.com/#!/play/</span></span></span><br><span class="line">http:<span class="comment">//<span class="label">XXX.com/#!/</span></span></span><br></pre></td></tr></table></figure></p><p>按照微信的说明，也就是所有在/user/、/play/以及主目录下的页面都能发起支付，但是通过在IOS和Android系统中拷贝当前页面URL，发现经常有当前页面URL与实际不符情况，这样就导致支付页面不能准确匹配授权目录，从而引起‘当前URL未注册’错误的发生。<br>后来发现了一篇非常有用的博文<a href="http://www.tuicool.com/articles/mQ7RRfb" target="_blank" rel="external">&lt;开发单页应用(SPA)时候遇到的微信支付授权目录的坑&gt;</a>，他在其中给出了微信端对于IOS和Android系统判断当前支付页面路径的规则：<font color="#0099ff" size="3" face="楷体"><br>我们先定义两个名词：首先把当前页面叫做“Current Page”；当我们从微信别的地方点击链接呼出微信浏览器时所落在的页面、或者点击微信浏览器的刷新按钮时所刷新的页面，我们叫做“Landing Page”。举个例子，我们从任何地方点击链接进入页面A，然后依次浏览到B、C、D，那么Current Page就是D，而Landing Page是A，如果此时我们在D页面点击一下浏览器的刷新按钮，那么Landing Page就变成了D（以上均是在单页应用的环境下，即以hashbang模式通过js更改浏览器路径，直接href跳转的不算）。<br>问题来了，在ios和安卓下呼出微信支付的时候，微信支付判断当前路径的规则分别是：<br>IOS：Landing Page<br>安卓：Current Page<br>这个规则是我试了N次试出来的，非常的坑，这就意味着，在ios环境下，任何一个页面都有可能成为支付页面（因为我无法预知和控制用户在哪个页面点微信浏览器的刷新按钮，或是用户通过哪个连接从外部进入到系统）</font><br>这与我在实际开发中遇到的情况完全相符！<br>于是将所有H5链接全部添加?，例如：原始URL链接为：<code>http://XXX.com/#!/test/100000</code>，现改为<code>http://XXX.com/?#!/test/100000</code>，这样做之所以生效基于以下两点：<br>◆ <strong>添加?后不影响原有页面正常访问</strong><br>添加?后可以正常访问原有页面，这是非常重要的，保证了页面能够正确路由<br>◆ <strong>微信判断支付页面的规则</strong><br>由于URL中添加?，微信在拿到页面URL时会将?后的内容当作参数处理自动截取掉，不参与授权目录的比较，因而微信端判断出来的所有页面的授权目录均为<code>http://XXX.com/</code>，因此支付授权目录设置为<code>http://XXX.com/</code>问题即可解决。<br>至此，关于微信支付的系列文章已全部完结。</p><p>转载请注明出处：<a href="http://yurixu.com/blog/2016/08/21/漫谈微信支付-授权目录设置/">http://yurixu.com/blog/2016/08/21/漫谈微信支付-授权目录设置/</a></p><p>— 完结 —</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xrc03.com1.z0.glb.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98.jpeg&quot; alt=&quot;&quot;&gt;&lt;br&gt;本文对公共号支付的支付授权目录设置进行介绍并给出了一种解决单应用H5页面下授权目录不生效的方法。&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://yurixu.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://yurixu.com/tags/PHP/"/>
    
      <category term="支付" scheme="http://yurixu.com/tags/%E6%94%AF%E4%BB%98/"/>
    
  </entry>
  
  <entry>
    <title>file_get_contents(): Unable to find the wrapper https</title>
    <link href="http://yurixu.com/blog/2016/08/17/file-get-contents-Unable-to-find-the-wrapper-https/"/>
    <id>http://yurixu.com/blog/2016/08/17/file-get-contents-Unable-to-find-the-wrapper-https/</id>
    <published>2016-08-17T13:38:35.000Z</published>
    <updated>2018-05-22T02:15:12.176Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xrc03.com1.z0.glb.clouddn.com/HTTPS.jpg" alt=""><br>使用file_get_contents向https类型的链接发送构造的请求头，返回：<br><code>Warning: file_get_contents(): Unable to find the wrapper &quot;https&quot; - did you forget to enable it when you configured PHP?</code></p><a id="more"></a><p><strong>原因分析</strong>：<br>PHP没有开启php_openssl扩展；<br><strong>检测方法</strong>：<br>检测主机是否开启php_openssl扩展的方法：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ssl</span> = stream_get_wrappers();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'openssl: '</span>,  extension_loaded (<span class="string">'openssl'</span>) ? <span class="string">'yes'</span>:<span class="string">'no'</span>, <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'http wrapper: '</span>, in_array(<span class="string">'http'</span>, <span class="variable">$ssl</span>) ? <span class="string">'yes'</span>:<span class="string">'no'</span>, <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'https wrapper: '</span>, in_array(<span class="string">'https'</span>, <span class="variable">$ssl</span>) ? <span class="string">'yes'</span>:<span class="string">'no'</span>, <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'wrappers: '</span>, var_export(<span class="variable">$ssl</span>);</span><br></pre></td></tr></table></figure></p><p>如果返回的结果如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">openssl: yes</span><br><span class="line">http wrapper: yes</span><br><span class="line">https wrapper: yes</span><br><span class="line">wrappers: <span class="keyword">array</span>(<span class="number">11</span>) &#123;</span><br><span class="line">  [...]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>表明主机已经开启了php_openssl扩展。<br><strong>解决方案</strong>：<br>修改PHP配置文件php.ini，启用php_openssl扩展并开启allow_url_fopen。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extension=php_openssl.dll&#10;allow_url_fopen = On</span><br></pre></td></tr></table></figure></p><p>转载请注明出处：<a href="http://yurixu.com/blog/2016/08/17/file-get-contents-Unable-to-find-the-wrapper-https/">http://yurixu.com/blog/2016/08/17/file-get-contents-Unable-to-find-the-wrapper-https/</a></p>]]></content>
    
    <summary type="html">
    
      file_get_contents如何支持Https链接
    
    </summary>
    
      <category term="PHP" scheme="http://yurixu.com/categories/PHP/"/>
    
    
      <category term="issue" scheme="http://yurixu.com/tags/issue/"/>
    
  </entry>
  
  <entry>
    <title>漫谈微信支付-公共号支付</title>
    <link href="http://yurixu.com/blog/2016/08/16/%E6%BC%AB%E8%B0%88%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98-%E5%85%AC%E5%85%B1%E5%8F%B7%E6%94%AF%E4%BB%98/"/>
    <id>http://yurixu.com/blog/2016/08/16/漫谈微信支付-公共号支付/</id>
    <published>2016-08-16T13:22:48.000Z</published>
    <updated>2018-05-22T02:15:12.175Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xrc03.com1.z0.glb.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98.jpeg" alt=""><br>本文对微信公共号支付的实现过程进行详细介绍。</p><a id="more"></a><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>公共号支付主要应用于微信内H5页面上发起的微信支付流程，它相对于扫码支付和APP要复杂一些，而且在实际开发过程中遇到的问题相对较多。</p><h2 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h2><p>公共号支付与APP支付类似，都需要调起统一下单接口获得prepay_id，根据prepay_id等参数调起微信发起支付流程，最后微信后台将支付结果异步回调给商户后台。<br>◆ <strong>准备工作</strong><br>公共号支付需要提前在微信公共平台进行业务配置，包括设置支付授权目录、设置JS接口安全域名以及设置授权回调页面域名。<br><strong>支付授权目录:</strong><br>位置：微信支付——&gt;开发配置——&gt;公共号支付<br>[1] 所有使用公众号支付方式发起支付请求的链接地址，都必须在支付授权目录之下；<br>[2] 正式支付授权目录最多设置3个，测试授权目录最多设置1个，且域名必须通过ICP备案；<br>[3] 头部要包含http或https，须细化到二级或三级目录，以左斜杠“/”结尾。<br>业务中发起支付的页面地址必须在授权目录下，否则调用下单接口时会提示“当前页面的URL未注册”。<br><strong>JS接口安全域名:</strong><br>位置：微信支付——&gt;公共号设置——&gt;功能设置——&gt;JS接口安全域名<br>设置JS接口安全域名后，公众号开发者可在该域名下调用微信开放的JS接口。<br>注意事项：<br>[1] 可填写三个域名，要求是一级或一级以上域名（例：qq.com，或者 <a href="http://www.qq.com" target="_blank" rel="external">www.qq.com</a> ），需使用字母、数字及“-”的组合，不支持IP地址及端口号；<br>[2] 填写的域名须通过ICP备案的验证；<br>[3] 一个自然月内最多可修改并保存三次。<br><strong>授权回调页面域名:</strong><br>位置：微信支付——&gt;接口权限——&gt;网页授权获取用户基本信息<br>用户在网页授权页同意授权给公众号后，微信会将授权数据传给一个回调页面，回调页面需在此域名下，以确保安全可靠。<br>注意事项：<br>[1] 回调页面域名需使用字母、数字及“-”的组合，不支持IP地址及端口号。填写的域名需与实际回调URL中的域名相同；<br>[2] 填写的域名须通过ICP备案的验证。<br>获取用户授权时redirect_uri对应的URL必须在此域名下，否则回调的地址会无法打开。<br>◆ <strong>统一下单</strong><br>公共号支付统一下单接口需要传递openid参数，微信公共平台对于openid的解释如下：<font color="#0099ff" size="3" face="楷体"><br>在关注者与公众号产生消息交互后，公众号可获得关注者的OpenID（加密后的微信号，每个用户对每个公众号的OpenID是唯一的。对于不同公众号，同一用户的openid不同）。<br>公众号可根据以下接口来获取用户的openid，如需获取用户的昵称、头像、性别、所在城市、语言和关注时间，则需要用户授权。<br>参考信息：<a href="http://mp.weixin.qq.com/wiki/17/c0f37d5704f0b64713d5d2c37b468d75.html" target="_blank" rel="external">http://mp.weixin.qq.com/wiki/17/c0f37d5704f0b64713d5d2c37b468d75.html</a><br>开发者如果需要将同一个用户在不同公众号下的openid统一为一个id来记录，可以参考以下接口：<br>参考信息：<a href="http://mp.weixin.qq.com/wiki/14/bb5031008f1494a59c6f71fa0f319c66.html" target="_blank" rel="external">http://mp.weixin.qq.com/wiki/14/bb5031008f1494a59c6f71fa0f319c66.html</a></font><br>即openid其实是每个用户在不同公共号内的唯一标示，获取openid需要先经过用户同意授权，获取code，再通过code获取openid。<br>◆ <strong>获取用户授权</strong><br>微信提供了两种授权方式：snsapi_base和snsapi_userinfo。<br>snsapi_base：不弹出授权页面，直接跳转，只能获取用户openid；<br>snsapi_userinfo：弹出授权页面，可通过openid拿到昵称、性别、所在地。并且，即使在未关注的情况下，只要用户授权，也能获取其信息。<br>想要获取code，需要构造如下地址：<br><code>https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;scope=SCOPE&amp;state=STATE#wechat_redirect</code><br>其中SCOPE参数为snsapi_base或snsapi_userinfo，REDIRECT_URI为获取用户授权后跳转的地址。<br>此处需要在微信公共平台配置授权回调页面域名:<code>微信公共平台——&gt;接口权限——&gt;网页授权获取用户基本信息</code>，点击“修改”，在弹出的页面中填写授权回调页面域名，REDIRECT_URI所在的域名要与填写的回调页面域名相同，否则在进行用户授权时会提示redirect_uri错误。<br>获取code后，再请求以下链接获取openid：<br><code>https://api.weixin.qq.com/sns/oauth2/access_token?appid=APPID&amp;secret=SECRET&amp;code=CODE&amp;grant_type=authorization_code</code><br>其中APPID为公共号唯一标示，SECRET为公共号APPSECRET。<br>有关如何获取用户openid的详细内容可以参考微信官网文档<a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421140842&amp;token=&amp;lang=zh_CN" target="_blank" rel="external">网页授权获取用户基本信息</a>(PS：以上这是最新版的公共号开发文档，这是<a href="http://mp.weixin.qq.com/wiki/17/c0f37d5704f0b64713d5d2c37b468d75.html" target="_blank" rel="external">旧版</a>的文档，建议查看新版文档)<br>微信公共号支付SDK文件JsApiPay类提供了获取用户openid的方法GetOpenid：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">   * </span><br><span class="line">   * 通过跳转获取用户的openid，跳转流程如下：</span><br><span class="line">   * 1、设置自己需要调回的url及其其他参数，跳转到微信服务器https://open.weixin.qq.com/connect/oauth2/authorize</span><br><span class="line">   * 2、微信服务处理完成之后会跳转回用户redirect_uri地址，此时会带上一些参数，如：code</span><br><span class="line">   * </span><br><span class="line">   * <span class="doctag">@return</span> 用户的openid</span><br><span class="line">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">GetOpenid</span><span class="params">()</span></span><br><span class="line">  </span>&#123;</span><br><span class="line">    <span class="comment">//通过code获得openid</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">'code'</span>]))&#123;</span><br><span class="line">      <span class="comment">//触发微信返回code码</span></span><br><span class="line">      <span class="variable">$baseUrl</span> = urlencode(<span class="string">'http://'</span>.<span class="variable">$_SERVER</span>[<span class="string">'HTTP_HOST'</span>].<span class="variable">$_SERVER</span>[<span class="string">'PHP_SELF'</span>].<span class="variable">$_SERVER</span>[<span class="string">'QUERY_STRING'</span>]);</span><br><span class="line">      <span class="variable">$url</span> = <span class="variable">$this</span>-&gt;__CreateOauthUrlForCode(<span class="variable">$baseUrl</span>);</span><br><span class="line">      Header(<span class="string">"Location: $url"</span>);</span><br><span class="line">      <span class="keyword">exit</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">//使用code码，以获取openid</span></span><br><span class="line">        <span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="string">'code'</span>];</span><br><span class="line">      <span class="variable">$openid</span> = <span class="variable">$this</span>-&gt;getOpenidFromMp(<span class="variable">$code</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="variable">$openid</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>其中GetOpenidFromMp方法在官方SDK中存在错误，<font color="red">CURLOPT_TIMEOUT</font>写错了：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">   * </span><br><span class="line">   * 通过code从工作平台获取openid机器access_token</span><br><span class="line">   * <span class="doctag">@param</span> string $code 微信跳转回来带上的code</span><br><span class="line">   * <span class="doctag">@return</span> openid</span><br><span class="line">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">GetOpenidFromMp</span><span class="params">(<span class="variable">$code</span>)</span></span><br><span class="line">  </span>&#123;</span><br><span class="line">    <span class="variable">$url</span> = <span class="variable">$this</span>-&gt;__CreateOauthUrlForOpenid(<span class="variable">$code</span>);</span><br><span class="line">    <span class="comment">//初始化curl</span></span><br><span class="line">    <span class="variable">$ch</span> = curl_init();</span><br><span class="line">    <span class="comment">//设置超时</span></span><br><span class="line">    <span class="comment">//curl_setopt($ch, CURLOP_TIMEOUT, 30);//CURLOP_TIMEOUT写错了！！！！应该是CURLOPT_TIMEOUT</span></span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_TIMEOUT, <span class="number">30</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYPEER,<span class="keyword">FALSE</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYHOST,<span class="keyword">FALSE</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="keyword">FALSE</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="keyword">TRUE</span>);</span><br><span class="line">    <span class="keyword">if</span>(WxPayConfig::CURL_PROXY_HOST != <span class="string">"0.0.0.0"</span> </span><br><span class="line">      &amp;&amp; WxPayConfig::CURL_PROXY_PORT != <span class="number">0</span>)&#123;</span><br><span class="line">      curl_setopt(<span class="variable">$ch</span>,CURLOPT_PROXY, WxPayConfig::CURL_PROXY_HOST);</span><br><span class="line">      curl_setopt(<span class="variable">$ch</span>,CURLOPT_PROXYPORT, WxPayConfig::CURL_PROXY_PORT);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//运行curl，结果以json形式返回</span></span><br><span class="line">    <span class="variable">$res</span> = curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">    curl_close(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="comment">//取出openid</span></span><br><span class="line">    <span class="variable">$data</span> = json_decode(<span class="variable">$res</span>,<span class="keyword">true</span>);</span><br><span class="line">    <span class="variable">$this</span>-&gt;data = <span class="variable">$data</span>;</span><br><span class="line">    <span class="variable">$openid</span> = <span class="variable">$data</span>[<span class="string">'openid'</span>];</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$openid</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>获取openid后就可以调用统一下单接口获得prepay_id。<br>◆ <strong>H5调起微信支付</strong><br><a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=7_7&amp;index=6" target="_blank" rel="external">网页端调起支付API</a>提供了前端调起微信发起支付的方法，此处需要特别注意：<font color="red">公共号支付调起微信支付的接口参数与APP支付调起微信支付的参数大小写不同！</font><br>APP拉起微信支付接口参数列表：<br><img src="http://7xrc03.com1.z0.glb.clouddn.com/APP-%E6%8B%89%E8%B5%B7%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98.png" alt="APP拉起微信支付"><br>公共号拉起微信支付接口参数列表：<br><img src="http://7xrc03.com1.z0.glb.clouddn.com/%E5%85%AC%E5%85%B1%E5%8F%B7%E6%8B%89%E8%B5%B7%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98.png" alt="公共号拉起微信支付"><br>可以发现变量名一列，公共号接口有的字母是大写的，生成签名是需要区分参数大小写的，所以这块一定要注意，否则在调用接口时你就会一直收到签名错误的提示。<br>签名生成成功了，但是在调用调起微信支付接口时你可能会收到提示”调用支付JSAPI缺少参数：timeStamp，但是明明已经传递该参数了，怎么还会提示缺少参数呢？是由timeStamp的类型引起的，上图的参数列表中timeStamp类型为String字符串类型，很多时候我们程序里直接使用time()生成时间戳是整数，因此在将timeStamp传递给该接口时需要转换为字符串类型。<br>如果是服务器端调用拉起微信支付接口，需要将WxPay.Data.php文件中WxPayJsApiPay的SetTimeStamp方法作相应修改：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">  * 设置支付时间戳</span><br><span class="line">  * <span class="doctag">@param</span> string $value </span><br><span class="line">  **/</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">SetTimeStamp</span><span class="params">(<span class="variable">$value</span>)</span></span><br><span class="line">  </span>&#123;</span><br><span class="line">    <span class="comment">//modify by yuri 2016/7/5 解决JSAPI微信支付提示“缺少timeStamp参数”问题</span></span><br><span class="line">    <span class="variable">$this</span>-&gt;values[<span class="string">'timeStamp'</span>] = (string)<span class="variable">$value</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>测试开发时配置好测试授权目录，将微信号添加到测试白名单，H5调用拉起微信支付接口即可完成支付。</p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p>◆ <strong>支付场景非法</strong><br><img src="http://7xrc03.com1.z0.glb.clouddn.com/wxPay/error/%E6%94%AF%E4%BB%98%E5%9C%BA%E6%99%AF%E9%9D%9E%E6%B3%95.png" align="left"><br><br><br><br><br><br><strong>错误场景</strong>：前端调用拉起微信支付接口<code>getBrandWCPayRequest</code>报错。<br><strong>原因分析</strong>：与开发用的APPID有关。JSAPI支付用到的APPID是从微信公告平台申请，APP支付用到的APPID是从微信开放平台申请，如果将APP支付的APPID用于JSAPI支付，就会收到该错误提示。<br><strong>解决方法</strong>：不同的支付场景要使用相对应的APPID，不允许跨场景使用APPID支付。</p><p>◆ <strong>您没有JSAPI支付权限</strong><br><strong>错误场景</strong>：后台调用<code>unifiedorder</code>统一下单接口报错。<br><strong>原因分析</strong>：同“支付场景非法”<br><strong>解决方法</strong>：同“支付场景非法”</p><p>◆ <strong>不允许跨号支付</strong><br><img src="http://7xrc03.com1.z0.glb.clouddn.com/wxPay/error/%E4%B8%8D%E5%85%81%E8%AE%B8%E8%B7%A8%E5%8F%B7%E6%94%AF%E4%BB%98.png" align="left"><br><br><br><br><br><br><br><br><strong>错误场景</strong>：在公共号内调用<code>unifiedorder</code>统一下单接口报错。<br><strong>原因分析</strong>：公共号A申请开通了JSAPI支付，得到该公共号微信支付开发对应的APPID、KEY、APPSECRET，如果在公共号B内调用公共号A开发的微信支付接口，就会提示“不允许跨号支付”，微信侧限制了微信支付开发的相关接口只能在对应的公共号内调用。<br><strong>解决方法</strong>：在微信JSAPI开发中配置的公共号内调用微信支付相关接口。</p><p>◆ <strong>缺少openid</strong><br><img src="http://7xrc03.com1.z0.glb.clouddn.com/wxPay/error/%E7%BC%BA%E5%B0%91openid.png" align="left"><br><br><br><br><br><br><br><strong>错误场景</strong>：后台调用<code>unifiedorder</code>统一下单接口报错。<br><strong>原因分析</strong>：公共号支付的下单接口需要传递openid参数，为用户在商户appid下的唯一标识。调用统一下单接口时需要先获取用户openid。<br><strong>解决方法</strong>：调用<code>unifiedorder</code>统一下单接口前，确保已经获取到用户openid。</p><p>◆ <strong>缺少timeStamp</strong><br><img src="http://7xrc03.com1.z0.glb.clouddn.com/wxPay/error/%E7%BC%BA%E5%B0%91timeStamp.png" align="left"><br><br><br><br><br><br><br><br><strong>错误场景</strong>：前端调用拉起微信支付接口<code>getBrandWCPayRequest</code>报错。<br><strong>原因分析</strong>：<code>getBrandWCPayRequest</code>参数列表中写明了timeStamp参数类型为String，如果传递的timeStamp值为整型，会产生该错误。<br><strong>解决方法</strong>：将timeStamp的值显示转换为字符串类型。</p><p>◆ <strong>签名失败</strong><br><img src="http://7xrc03.com1.z0.glb.clouddn.com/wxPay/error/%E7%AD%BE%E5%90%8D%E5%A4%B1%E8%B4%A5.png" align="left"><br><br><br><br><br><br><strong>错误场景</strong>：前端调用拉起微信支付接口<code>getBrandWCPayRequest</code>报错。<br><strong>原因分析</strong>：公共号支付拉起微信支付接口与APP支付拉起微信支付接口中参数的大小写不同，生成签名会区分大小写。<br><strong>解决方法</strong>：生成签名要严格按照参数列表中变量名称进行生成，尤其注意参数大小写。</p><p>◆ <strong>body参数长度有误</strong><br><img src="http://7xrc03.com1.z0.glb.clouddn.com/wxPay/error/body%E5%8F%82%E6%95%B0%E9%95%BF%E5%BA%A6%E6%9C%89%E8%AF%AF.png" align="left"><br><br><br><br><br><br><strong>错误场景</strong>：后台调用<code>unifiedorder</code>统一下单接口报错。<br><strong>原因分析</strong>：body参数长度太长，unifiedorder统一下单接口中body参数长度为String(128)，即占用128个字节，一个汉字占用3个字节，一个字母或数字占用1个字节，所以如果全部为汉字的话，最多42个。<br><strong>解决方法</strong>：必要时使用字符串截取函数限制body的长度。</p><p>◆ <strong>URL未注册</strong><br><img src="http://7xrc03.com1.z0.glb.clouddn.com/wxPay/error/URL%E6%9C%AA%E6%B3%A8%E5%86%8C.png" align="left"><br><br><br><br><br><br><br><br><strong>错误场景</strong>：前端调用拉起微信支付接口<code>getBrandWCPayRequest</code>报错。<br><strong>原因分析</strong>：授权目录配置问题，当前支付页与授权目录设置不匹配。<br><strong>解决方法</strong>：详细解决方案可参考另一篇博文<a href="http://yurixu.com/blog/2016/08/21/%E6%BC%AB%E8%B0%88%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98-%E6%8E%88%E6%9D%83%E7%9B%AE%E5%BD%95%E8%AE%BE%E7%BD%AE/">&lt;漫谈微信支付-授权目录设置&gt;</a></p><p>◆ <strong>下单账号与支付账号不一致</strong><br><img src="http://7xrc03.com1.z0.glb.clouddn.com/wxPay/error/%E4%B8%8B%E5%8D%95%E8%B4%A6%E5%8F%B7%E4%B8%8E%E6%94%AF%E4%BB%98%E8%B4%A6%E5%8F%B7%E4%B8%8D%E4%B8%80%E8%87%B4.png" align="left"><br><br><br><br><br><br><strong>错误场景</strong>：前端调用拉起微信支付接口<code>getBrandWCPayRequest</code>报错。前端调用拉起微信支付接口<code>getBrandWCPayRequest</code>，拉起微信账号A，但是在微信A中没有完成支付（例如：执行了取消操作），此时如果换另一个微信账号B，再对微信端同一个订单进行支付，拉起微信，此时会报该错。<br><strong>原因分析</strong>：微信端同一个订单号，限制了下单与支付账号必须使用同一个微信。在调用下单接口时传递了openid，在调用拉起微信支付接口时，如果当前用户的微信与下单微信不同，就会报该错。<br><strong>解决方法</strong>：下单账号与支付账号必须使用同一个微信。</p><p>◆ <strong>商户订单号重复</strong><br><img src="http://7xrc03.com1.z0.glb.clouddn.com/wxPay/error/%E5%95%86%E6%88%B7%E8%AE%A2%E5%8D%95%E5%8F%B7%E9%87%8D%E5%A4%8D.png" align="left"><br><br><br><br><br><br><strong>错误场景</strong>：后台调用<code>unifiedorder</code>统一下单接口报错。<br><strong>原因分析</strong>：同一个订单，如果修改了商品描述或者商品价格，再用同一个订单号去调用统一下单接口就会报该错。<br><strong>解决方法</strong>：重新生成订单。</p><p>◆ <strong>订单已过期</strong><br><img src="http://7xrc03.com1.z0.glb.clouddn.com/wxPay/error/%E8%AE%A2%E5%8D%95%E5%B7%B2%E8%BF%87%E6%9C%9F.png" align="left"><br><br><br><br><br><br><strong>错误场景</strong>：后台调用<code>unifiedorder</code>统一下单接口报错。<br><strong>原因分析</strong>：下单有时效性。<br><strong>解决方法</strong>：重新下单。</p><p>◆ <strong>调用微信支付相关接口异常缓慢</strong><br>微信支付SDK中所有最终请求微信服务器的出口均是经过WxPay.Api.php中的<code>postXmlCurl</code>接口：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">   * 以post方式提交xml到对应的接口url</span><br><span class="line">   * <span class="doctag">@param</span> string $xml  需要post的xml数据</span><br><span class="line">   * <span class="doctag">@param</span> string $url  url</span><br><span class="line">   * <span class="doctag">@param</span> bool $useCert 是否需要证书，默认不需要</span><br><span class="line">   * <span class="doctag">@param</span> int $second   url执行超时时间，默认30s</span><br><span class="line">   * <span class="doctag">@throws</span> WxPayException</span><br><span class="line">   */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">postXmlCurl</span><span class="params">(<span class="variable">$xml</span>, <span class="variable">$url</span>, <span class="variable">$useCert</span> = false, <span class="variable">$second</span> = <span class="number">30</span>)</span></span><br><span class="line">  </span>&#123;</span><br><span class="line">    <span class="variable">$ch</span> = curl_init();</span><br><span class="line">    <span class="comment">//设置超时</span></span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_TIMEOUT, <span class="variable">$second</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//如果有配置代理这里就设置代理</span></span><br><span class="line">    <span class="keyword">if</span>(WxPayConfig::CURL_PROXY_HOST != <span class="string">"0.0.0.0"</span> </span><br><span class="line">      &amp;&amp; WxPayConfig::CURL_PROXY_PORT != <span class="number">0</span>)&#123;</span><br><span class="line">      curl_setopt(<span class="variable">$ch</span>,CURLOPT_PROXY, WxPayConfig::CURL_PROXY_HOST);</span><br><span class="line">      curl_setopt(<span class="variable">$ch</span>,CURLOPT_PROXYPORT, WxPayConfig::CURL_PROXY_PORT);</span><br><span class="line">    &#125;</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>,CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>,CURLOPT_SSL_VERIFYPEER,<span class="keyword">FALSE</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>,CURLOPT_SSL_VERIFYHOST,<span class="keyword">FALSE</span>);</span><br><span class="line">    <span class="comment">//设置header</span></span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="keyword">FALSE</span>);</span><br><span class="line">    <span class="comment">//要求结果为字符串且输出到屏幕上</span></span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="keyword">TRUE</span>);</span><br><span class="line">    <span class="comment">//modify by yuri 2016/7/5 设置curl默认访问IPv4网络</span></span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_IPRESOLVE, CURL_IPRESOLVE_V4);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$useCert</span> == <span class="keyword">true</span>)&#123;</span><br><span class="line">      <span class="comment">//设置证书</span></span><br><span class="line">      <span class="comment">//使用证书：cert 与 key 分别属于两个.pem文件</span></span><br><span class="line">      curl_setopt(<span class="variable">$ch</span>,CURLOPT_SSLCERTTYPE,<span class="string">'PEM'</span>);</span><br><span class="line">      curl_setopt(<span class="variable">$ch</span>,CURLOPT_SSLCERT, WxPayConfig::SSLCERT_PATH);</span><br><span class="line">      curl_setopt(<span class="variable">$ch</span>,CURLOPT_SSLKEYTYPE,<span class="string">'PEM'</span>);</span><br><span class="line">      curl_setopt(<span class="variable">$ch</span>,CURLOPT_SSLKEY, WxPayConfig::SSLKEY_PATH);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//post提交方式</span></span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_POST, <span class="keyword">TRUE</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="variable">$xml</span>);</span><br><span class="line">    <span class="comment">//运行curl</span></span><br><span class="line">    <span class="variable">$data</span> = curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="comment">//返回结果</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$data</span>)&#123;</span><br><span class="line">      curl_close(<span class="variable">$ch</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">      <span class="variable">$error</span> = curl_errno(<span class="variable">$ch</span>);</span><br><span class="line">      curl_close(<span class="variable">$ch</span>);</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> WxPayException(<span class="string">"curl出错，错误码:$error"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>因为CURL默认先解析IPV6，再解析IPV4，所以如果你的支付场景只有IPV4网络，则最好设置CURL默认访问IPV4，这样可以省去解析IPV6的时间，接口调用速度明显加快。<br>转载请注明出处：<a href="http://yurixu.com/blog/2016/08/16/漫谈微信支付-公共号支付/">http://yurixu.com/blog/2016/08/16/漫谈微信支付-公共号支付/</a></p>]]></content>
    
    <summary type="html">
    
      漫谈微信支付-公共号支付
    
    </summary>
    
      <category term="PHP" scheme="http://yurixu.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://yurixu.com/tags/PHP/"/>
    
      <category term="支付" scheme="http://yurixu.com/tags/%E6%94%AF%E4%BB%98/"/>
    
  </entry>
  
  <entry>
    <title>2016年上半年读书情况</title>
    <link href="http://yurixu.com/blog/2016/08/14/2016%E5%B9%B4%E4%B8%8A%E5%8D%8A%E5%B9%B4%E8%AF%BB%E4%B9%A6%E6%83%85%E5%86%B5/"/>
    <id>http://yurixu.com/blog/2016/08/14/2016年上半年读书情况/</id>
    <published>2016-08-14T14:43:39.000Z</published>
    <updated>2018-05-22T02:15:12.174Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xj5r6.com1.z0.glb.clouddn.com/read.png" alt=""></p><p>2016年上半年的整体读书计划完成情况一般，没有很好的达到预期，受身体情况以及项目影响较大，尤其是在技术类的图书阅读上完成的情况不太好，下半年继续努力。</p><a id="more"></a><table class="table table-bordered table-striped table-condensed">   <tr>        <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">2016上半年读书情况</th>        </tr>   <tr>      <td width="20%" style="text-align:center; font-weight:bold">内容</td>            <td width="50%" style="text-align:center; font-weight:bold">书单</td>      <td width="30%" style="text-align:center; font-weight:bold">完成情况</td>   </tr>   <tr>      <td rowspan="2" style="text-align:center">技术</td>            <td width="50%" style="text-align:center">PHP和MySQL Web开发</td>      <td width="30%" style="text-align:center"><label style="background-color:#5CB85C; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">已 读</label></td>   </tr>   <tr>      <td width="50%" style="text-align:center">PHP核心技术与最佳实践</td>      <td width="30%" style="text-align:center"><label style="background-color:#5BC0DE; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">在 读</label></td>   </tr>   <tr>      <td rowspan="9" style="text-align:center">人文社科</td>        <td width="50%" style="text-align:center">如何高效读懂一本书</td>      <td width="30%" style="text-align:center"><label style="background-color:#5CB85C; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">已 读</label></td>           </tr>   <tr>      <td width="50%" style="text-align:center">谁动了我的奶酪</td>      <td width="30%" style="text-align:center"><label style="background-color:#5CB85C; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">已 读</label></td>   </tr>   <tr>      <td width="50%" style="text-align:center">沟通的艺术（李元秀）</td>      <td width="30%" style="text-align:center"><label style="background-color:#5CB85C; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">已 读</label></td>   </tr>   <tr>      <td width="50%" style="text-align:center">异类</td>      <td width="30%" style="text-align:center"><label style="background-color:#5CB85C; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">已 读</label></td>   </tr>   <tr>      <td width="50%" style="text-align:center">鲁滨逊漂流记</td>      <td width="30%" style="text-align:center"><label style="background-color:#5CB85C; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">已 读</label></td>   </tr>      <tr>      <td width="50%" style="text-align:center">学会提问（布朗版）</td>      <td width="30%" style="text-align:center"><label style="background-color:#DAA530; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">暂 停</label></td>   </tr>   <tr>      <td width="50%" style="text-align:center">如何高效学习</td>      <td width="30%" style="text-align:center"><label style="background-color:#DAA530; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">暂 停</label></td>   </tr>   <tr>      <td width="50%" style="text-align:center">梦的解析</td>      <td width="30%" style="text-align:center"><label style="background-color:#DAA530; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">暂 停</label></td>   </tr>   <tr>      <td width="50%" style="text-align:center">追风筝的人</td>      <td width="30%" style="text-align:center"><label style="background-color:#5BC0DE; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">在 读</label></td>   </tr></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xj5r6.com1.z0.glb.clouddn.com/read.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;2016年上半年的整体读书计划完成情况一般，没有很好的达到预期，受身体情况以及项目影响较大，尤其是在技术类的图书阅读上完成的情况不太好，下半年继续努力。&lt;/p&gt;
    
    </summary>
    
      <category term="Read" scheme="http://yurixu.com/categories/Read/"/>
    
    
      <category term="Read" scheme="http://yurixu.com/tags/Read/"/>
    
  </entry>
  
  <entry>
    <title>2016年读书计划（下）</title>
    <link href="http://yurixu.com/blog/2016/08/14/2016%E5%B9%B4%E8%AF%BB%E4%B9%A6%E8%AE%A1%E5%88%92%EF%BC%88%E4%B8%8B%EF%BC%89/"/>
    <id>http://yurixu.com/blog/2016/08/14/2016年读书计划（下）/</id>
    <published>2016-08-14T14:39:38.000Z</published>
    <updated>2018-05-22T02:15:12.175Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xj5r6.com1.z0.glb.clouddn.com/read.png" alt=""><br><a id="more"></a></p><table class="table table-bordered table-striped table-condensed">   <tr>           <th colspan="4" bgcolor="F5F5F5" style="font-size:15px; padding:5px">2016下半年读书计划</th>        </tr>   <tr>      <td width="20%" style="text-align:center; font-weight:bold">内容</td>      <td width="20%" style="text-align:center; font-weight:bold">月份</td>      <td width="40%" style="text-align:center; font-weight:bold">书单</td>      <td width="20%" style="text-align:center; font-weight:bold">完成情况</td>   </tr>   <tr>      <td rowspan="2" style="text-align:center">PHP</td>      <td rowspan="2" width="20%" style="text-align:center">2016年8月</td>      <td width="40%" style="text-align:center">PHP核心技术与最佳实践</td>      <td width="20%" style="text-align:center"><label style="background-color:#5BC0DE; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">在 读</label></td>   </tr>   <tr>      <td width="40%" style="text-align:center">高性能PHP应用开发</td>      <td width="20%" style="text-align:center"><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>   </tr>   <tr>      <td rowspan="3" style="text-align:center">MySQL</td>      <td rowspan="3" width="20%" style="text-align:center">2016年9-10月</td>      <td width="40%" style="text-align:center">SQL注入攻击与防御</td>      <td width="20%" style="text-align:center"><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>         </tr>   <tr>      <td width="40%" style="text-align:center">MySQL入门很简单</td>      <td width="20%" style="text-align:center"><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>   </tr>   <tr>                 <td width="40%" style="text-align:center">MySQL必知必会</td>      <td width="20%" style="text-align:center"><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>   </tr>   <tr>      <td rowspan="2" style="text-align:center">架构设计</td>      <td rowspan="2" width="20%" style="text-align:center">2016年11-12月</td>      <td width="40%" style="text-align:center">大型网站技术架构</td>      <td width="20%" style="text-align:center"><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>         </tr>   <tr>      <td width="40%" style="text-align:center">代码整洁之道</td>      <td width="20%" style="text-align:center"><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>   </tr>   <tr>      <td rowspan="8" style="text-align:center">人文社科</td>      <td rowspan="8" width="20%" style="text-align:center">2016年8-12月</td>      <td width="40%" style="text-align:center">追风筝的人</td>      <td width="20%" style="text-align:center"><label style="background-color:#5BC0DE; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">在 读</label></td>   </tr>   <tr>      <td width="40%" style="text-align:center">学会提问（布朗版）</td>      <td width="20%" style="text-align:center"><label style="background-color:#DAA520; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">暂 停</label></td>   </tr>   <tr>      <td width="40%" style="text-align:center">工作前5年，决定你一生的财富</td>      <td width="20%" style="text-align:center"><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>   </tr>   <tr>      <td width="40%" style="text-align:center">富爸爸穷爸爸</td>      <td width="20%" style="text-align:center"><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>   </tr>   <tr>      <td width="40%" style="text-align:center">三体</td>      <td width="20%" style="text-align:center"><label style="background-color:#5BC0DE; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">在 读</label></td>   </tr>   <tr>      <td width="40%" style="text-align:center">从0到1</td>      <td width="20%" style="text-align:center"><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>   </tr>   <tr>      <td width="40%" style="text-align:center">极简术</td>      <td width="20%" style="text-align:center"><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>   </tr>   <tr>      <td width="40%" style="text-align:center">断舍离</td>      <td width="20%" style="text-align:center"><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>   </tr></table><table style="float:left">   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">PHP核心技术与最佳实践</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xr2qq.com1.z0.glb.clouddn.com/PHP%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>列旭松，陈文</td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>522</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="http://book.douban.com/subject/20370984/" target="_blank" rel="external">PHP核心技术与最佳实践</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#5BC0DE; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">在 读</label></td>   </tr>   <tr>      <td>书评：</td>      <td></td>   </tr></table><table>   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">高性能PHP应用开发</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xr2qq.com1.z0.glb.clouddn.com/%E9%AB%98%E6%80%A7%E8%83%BDPHP%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>Armando Padilla/Tim Hawkins</td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>177</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="http://book.douban.com/subject/6902577/" target="_blank" rel="external">高性能PHP应用开发</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>     </tr>   <tr>      <td>书评：</td>      <td></td>   </tr></table><table>   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">SQL注入攻击与防御</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xr2qq.com1.z0.glb.clouddn.com/SQL%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E5%BE%A1.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>克拉克</td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>359</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="http://book.douban.com/subject/4861648/" target="_blank" rel="external">SQL注入攻击与防御</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>     </tr>   <tr>      <td>书评：</td>      <td></td>   </tr></table><table>   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">MySQL入门很简单</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xr2qq.com1.z0.glb.clouddn.com/MySQL%E5%85%A5%E9%97%A8%E5%BE%88%E7%AE%80%E5%8D%95.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>黄缙华</td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>466</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="http://book.douban.com/subject/5450806/" target="_blank" rel="external">MySQL入门很简单</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>     </tr>   <tr>      <td>书评：</td>      <td></td>   </tr></table><table>   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">MySQL必知必会</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xr2qq.com1.z0.glb.clouddn.com/MySQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>福塔</td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>241</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="http://book.douban.com/subject/3354490/" target="_blank" rel="external">MySQL必知必会</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>     </tr>   <tr>      <td>书评：</td>      <td></td>   </tr></table><table>   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">大型网站技术架构</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xr2qq.com1.z0.glb.clouddn.com/%E5%A4%A7%E5%9E%8B%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>李智慧</td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>218</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="http://book.douban.com/subject/25723064/" target="_blank" rel="external">大型网站技术架构</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>     </tr>   <tr>      <td>书评：</td>      <td></td>   </tr></table><table>   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">代码整洁之道</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xr2qq.com1.z0.glb.clouddn.com/%E4%BB%A3%E7%A0%81%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>[美]Robert C. Martin</td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>388</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="http://book.douban.com/subject/4199741/" target="_blank" rel="external">代码整洁之道</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>     </tr>   <tr>      <td>书评：</td>      <td></td>   </tr></table><table>   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">追风筝的人</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xrc03.com1.z0.glb.clouddn.com/%E8%BF%BD%E9%A3%8E%E7%AD%9D%E7%9A%84%E4%BA%BA.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>[美]卡勒德·胡赛尼</td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>362</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="https://book.douban.com/subject/1770782/" target="_blank" rel="external">追风筝的人</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#5BC0DE; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">在 读</label></td>   </tr>   <tr>      <td>书评：</td>      <td></td>   </tr></table><table>   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">学会提问</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xr2qq.com1.z0.glb.clouddn.com/%E5%AD%A6%E4%BC%9A%E6%8F%90%E9%97%AE.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>布朗</td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>269</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="http://book.douban.com/subject/1504957/" target="_blank" rel="external">学会提问</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#B8860B; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">暂 停</label></td>     </tr>   <tr>      <td>书评：</td>      <td></td>   </tr></table><table>   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">工作前5年，决定你一生的财富</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xr2qq.com1.z0.glb.clouddn.com/%E5%B7%A5%E4%BD%9C%E5%89%8D5%E5%B9%B4%EF%BC%8C%E5%86%B3%E5%AE%9A%E4%BD%A0%E4%B8%80%E7%94%9F%E7%9A%84%E8%B4%A2%E5%AF%8C.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>三公子</td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>219</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="http://book.douban.com/subject/26590267/" target="_blank" rel="external">工作前5年，决定你一生的财富</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>     </tr>   <tr>      <td>书评：</td>      <td></td>   </tr></table><table>   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">富爸爸穷爸爸</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xr2qq.com1.z0.glb.clouddn.com/%E5%AF%8C%E7%88%B8%E7%88%B8%E7%A9%B7%E7%88%B8%E7%88%B8.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>[美]罗伯特.T.清崎</td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>233</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="http://book.douban.com/subject/3291111/" target="_blank" rel="external">富爸爸穷爸爸</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>     </tr>   <tr>      <td>书评：</td>      <td></td>   </tr></table><table>   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">三体II</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xr2qq.com1.z0.glb.clouddn.com/%E4%B8%89%E4%BD%93II.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>刘慈欣</td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>470</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="http://book.douban.com/subject/3066477/" target="_blank" rel="external">三体II</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#5BC0DE; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">在 读</label></td>   </tr>   <tr>      <td>书评：</td>      <td></td>   </tr></table><table>   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">从0到1</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xr2qq.com1.z0.glb.clouddn.com/%E4%BB%8E0%E5%88%B01.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>彼得·蒂尔</td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>260</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="http://book.douban.com/subject/26297606/" target="_blank" rel="external">从0到1</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>     </tr>   <tr>      <td>书评：</td>      <td></td>   </tr></table><table>   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">极简术</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xr2qq.com1.z0.glb.clouddn.com/%E6%9E%81%E7%AE%80%E6%9C%AF.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>四角大辅</td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>200</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="http://book.douban.com/subject/26319755/" target="_blank" rel="external">极简术</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>     </tr>   <tr>      <td>书评：</td>      <td></td>   </tr></table><table>   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">断舍离</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xr2qq.com1.z0.glb.clouddn.com/%E6%96%AD%E8%88%8D%E7%A6%BB.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>山下英子</td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>152</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="http://book.douban.com/subject/25743907/" target="_blank" rel="external">断舍离</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>     </tr>   <tr>      <td>书评：</td>      <td></td>   </tr></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xj5r6.com1.z0.glb.clouddn.com/read.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Read" scheme="http://yurixu.com/categories/Read/"/>
    
    
      <category term="Read" scheme="http://yurixu.com/tags/Read/"/>
    
  </entry>
  
  <entry>
    <title>2016年上半年小结</title>
    <link href="http://yurixu.com/blog/2016/08/09/2016%E5%B9%B4%E4%B8%8A%E5%8D%8A%E5%B9%B4%E5%B0%8F%E7%BB%93/"/>
    <id>http://yurixu.com/blog/2016/08/09/2016年上半年小结/</id>
    <published>2016-08-09T00:07:34.000Z</published>
    <updated>2018-05-22T02:15:12.173Z</updated>
    
    <content type="html"><![CDATA[<p>恍恍惚惚已经到了8月，生活总是被忙碌的感觉充斥，多少有些乏味。<br>回顾上半年，经历了工作满一年、搬家、女票毕业，身体上也经历一次心疼，是真的“心”疼~<br>2-5月，工作和个人生活计划进行的有条不紊，生活异常的充实，每天除了工作时间就是学习充电，领悟到了阅读带来的内心平静与安稳。<br>6月经历了搬家以及身体的不适之后，生活作息再一次被打乱了，尤其是经历了“心”疼，每天都感觉异常的疲惫，也不敢熬夜了，因为到了晚上11点左右左胸明显感觉不适。<br>而后就是精品课支付与智慧校园项目同时进行，生活更是被工作占据。一句话，下半年继续加油~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;恍恍惚惚已经到了8月，生活总是被忙碌的感觉充斥，多少有些乏味。&lt;br&gt;回顾上半年，经历了工作满一年、搬家、女票毕业，身体上也经历一次心疼，是真的“心”疼~&lt;br&gt;2-5月，工作和个人生活计划进行的有条不紊，生活异常的充实，每天除了工作时间就是学习充电，领悟到了阅读带来的内心
      
    
    </summary>
    
      <category term="总结" scheme="http://yurixu.com/categories/%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="总结" scheme="http://yurixu.com/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>漫谈微信支付-APP支付</title>
    <link href="http://yurixu.com/blog/2016/07/22/%E6%BC%AB%E8%B0%88%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98-APP%E6%94%AF%E4%BB%98/"/>
    <id>http://yurixu.com/blog/2016/07/22/漫谈微信支付-APP支付/</id>
    <published>2016-07-21T19:28:29.000Z</published>
    <updated>2018-05-22T02:15:12.173Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xrc03.com1.z0.glb.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98.jpeg" alt=""><br>本文对微信APP支付的实现过程进行详细介绍。<br><a id="more"></a></p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>APP支付适用于在移动端APP中集成微信支付的功能，支付流程一般为：</p><ul><li>在APP内选择商品下单；</li><li>商户后台调用统一下单接口；</li><li>商户后台根据统一下单接口返回的prepay_id，再按签名规范重新生成签名后，将数据传输给APP调起微信进行支付；</li><li>用户微信客户端收到支付成功通知，微信后台将支付结果异步回调给商户后台。</li></ul><p>APP支付和下一节将要介绍的公共号支付相对于扫码支付，都多了一步调起微信的过程。</p><hr><h2 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h2><ul><li>SDK修改<br>在开篇<a href="http://yurixu.com/blog/2016/06/28/%E6%BC%AB%E8%B0%88%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98/">漫谈微信支付</a>中我们介绍过APP支付需要到微信开放平台注册为开发者并创建APP后才能使用，因此APP支付类型使用的APPID与扫码支付、公共号支付使用的APPID是不同的，如果想使同一份SDK并且同时支持APP支付和扫码支付，则需要对SDK的配置文件作进行修改。</li></ul><p>◆ 修改lib/WxPayConfig.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> APPID = <span class="string">'wx426...'</span>;</span><br><span class="line"><span class="keyword">const</span> MCHID = <span class="string">'122...'</span>;</span><br><span class="line"><span class="keyword">const</span> KEY = <span class="string">'e10adc...'</span>;</span><br><span class="line"><span class="keyword">const</span> APPSECRET = <span class="string">'01c6d59a3f...'</span>;</span><br><span class="line"><span class="comment">//add by yuri 2016/6/20 添加APP支付对应的APPID</span></span><br><span class="line"><span class="keyword">const</span> APP_APPID = <span class="string">'XXXXXXXXXX'</span>;</span><br></pre></td></tr></table></figure></p><p>在WxPayConfig中新增一常量<code>APP_APPID</code>，取值为APP支付申请的APPID。</p><p>◆ 修改lib/WxPay.Api.php<br>修改统一下单接口<code>unifiedOrder</code>，将：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$inputObj</span>-&gt;SetAppid(WxPayConfig::APPID);<span class="comment">//公众账号ID</span></span><br></pre></td></tr></table></figure></p><p>替换为：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//modify by yuri 2016/6/22 添加配置参数APP_APPID支持APP支付</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$inputObj</span>-&gt;GetTrade_type() == <span class="string">"APP"</span>) &#123;</span><br><span class="line">  <span class="variable">$inputObj</span>-&gt;SetAppid(WxPayConfig::APP_APPID);<span class="comment">//APP支付</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="variable">$inputObj</span>-&gt;SetAppid(WxPayConfig::APPID);<span class="comment">//扫码支付或者公共号支付的公众账号ID</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这样在调用统一下单时会根据支付类型不同调用不同的APPID，APP支付在调用统一下单接口时，trade_type要设置为“APP”。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$input</span> = <span class="keyword">new</span> WxPayUnifiedOrder();</span><br><span class="line"><span class="variable">$input</span>-&gt;SetBody(<span class="variable">$title</span>);</span><br><span class="line"><span class="variable">$input</span>-&gt;SetAttach(<span class="variable">$attach</span>);</span><br><span class="line"><span class="variable">$input</span>-&gt;SetOut_trade_no(<span class="variable">$orderid</span>);</span><br><span class="line"><span class="variable">$input</span>-&gt;SetTotal_fee(<span class="variable">$total_fee</span>);</span><br><span class="line"><span class="variable">$input</span>-&gt;SetTime_start(date(<span class="string">"YmdHis"</span>));</span><br><span class="line"><span class="variable">$input</span>-&gt;SetTime_expire(date(<span class="string">"YmdHis"</span>, time() + <span class="number">600</span>));</span><br><span class="line"><span class="variable">$input</span>-&gt;SetNotify_url(<span class="string">"http://XXX.com/test/WxPayCallBack"</span>);</span><br><span class="line"><span class="variable">$input</span>-&gt;SetTrade_type(<span class="string">"APP"</span>);</span><br><span class="line"><span class="variable">$order</span> = WxPayApi::unifiedOrder(<span class="variable">$input</span>);</span><br></pre></td></tr></table></figure></p><p>统一下单完成后，微信服务器会返回预支付交易prepay_id，然后再构造<a href="https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=9_12&amp;index=2" target="_blank" rel="external">调起微信支付</a>的参数返回给APP。<br><img src="http://7xrc03.com1.z0.glb.clouddn.com/APP-%E6%8B%89%E8%B5%B7%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98.png" alt="APP支付"><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$result</span>[<span class="string">'appid'</span>] = <span class="variable">$order</span>[<span class="string">'appid'</span>];</span><br><span class="line"><span class="variable">$result</span>[<span class="string">'partnerid'</span>] = WxPayConfig::MCHID;</span><br><span class="line"><span class="variable">$result</span>[<span class="string">'prepayid'</span>] = <span class="variable">$order</span>[<span class="string">'prepay_id'</span>];</span><br><span class="line"><span class="variable">$result</span>[<span class="string">'noncestr'</span>] = <span class="variable">$order</span>[<span class="string">'nonce_str'</span>];</span><br><span class="line"><span class="variable">$result</span>[<span class="string">'timestamp'</span>] = time();</span><br><span class="line"><span class="variable">$result</span>[<span class="string">'package'</span>] = <span class="string">'Sign=Wxpay'</span>;</span><br><span class="line"><span class="variable">$sign</span> = Common::makeSign(<span class="variable">$result</span>);      <span class="comment">//重新生成签名</span></span><br></pre></td></tr></table></figure></p><p>最后的<code>$sign = Common::makeSign($result);</code>是我将<code>lib/WxPay.Data.php</code>中的MakeSign作为公共方法提出，放到类Common中进行使用。<br>调起微信进行支付，支付完成后，微信系统会将支付结果异步回调统一下单接口中设置的notify_url。关于微信支付异步回调的处理过程参见上一篇<a href="http://yurixu.com/blog/2016/07/15/%E6%BC%AB%E8%B0%88%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98-%E6%89%AB%E7%A0%81%E6%94%AF%E4%BB%98/">漫谈微信支付-扫码支付</a>中的<strong>支付结果回调</strong>和<strong> 回调并发控制</strong>部分。</p><p>有关APP支付的实现已介绍完毕，在下一节<a href="http://yurixu.com/blog/2016/06/28/漫谈微信支付-公共号支付/">漫谈微信支付-公共号支付</a>将会介绍公共号支付的实现过程。<br>转载请注明出处：<a href="http://yurixu.com/blog/2016/07/22/%E6%BC%AB%E8%B0%88%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98-APP%E6%94%AF%E4%BB%98/">http://yurixu.com/blog/2016/07/22/漫谈微信支付-APP支付/</a></p>]]></content>
    
    <summary type="html">
    
      漫谈微信支付-APP支付
    
    </summary>
    
      <category term="PHP" scheme="http://yurixu.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://yurixu.com/tags/PHP/"/>
    
      <category term="支付" scheme="http://yurixu.com/tags/%E6%94%AF%E4%BB%98/"/>
    
  </entry>
  
  <entry>
    <title>漫谈微信支付-扫码支付</title>
    <link href="http://yurixu.com/blog/2016/07/15/%E6%BC%AB%E8%B0%88%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98-%E6%89%AB%E7%A0%81%E6%94%AF%E4%BB%98/"/>
    <id>http://yurixu.com/blog/2016/07/15/漫谈微信支付-扫码支付/</id>
    <published>2016-07-14T23:56:20.000Z</published>
    <updated>2018-05-22T02:15:12.172Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xrc03.com1.z0.glb.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98.jpeg" alt=""><br>本文对微信扫码支付的实现过程进行详细介绍。<br><a id="more"></a></p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>扫码支付应用于在各种场景下进行二维码支付，支付流程一般为：</p><ul><li>商户根据微信支付规则为不同商品生成二维码；</li><li>用户使用微信扫一扫功能，扫码获取商品支付信息；</li><li>用户输入支付密码，完成支付；</li><li>用户微信客户端收到支付成功通知，微信后台将支付结果异步回调给商户后台。</li></ul><hr><h2 id="支付模式"><a href="#支付模式" class="headerlink" title="支付模式"></a>支付模式</h2><p>根据应用场景的不同，微信提供了两种扫码支付模式：<br><strong>模式一：</strong><br>商户将productid（可定义为产品标识或订单号）作为参数根据微信支付规则事先生成固定的二维码，商户可将此二维码打印张贴，方便用户线下扫码支付。<br>用户扫码后，微信支付系统会将用户openid和商户定义的productid返回给商户在微信公共平台配置的回调地址，商户根据productid生成微信支付交易，最后微信支付系统发起用户支付流程。<br><strong>模式二：</strong><br>商户后台主动发起调用微信支付<a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_1" target="_blank" rel="external">统一下单</a>接口生成预付交易，并将接口返回的短连接生成二维码，用户扫码后输入密码完成支付交易。</p><hr><h2 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h2><h3 id="模式一："><a href="#模式一：" class="headerlink" title="模式一："></a>模式一：</h3><ul><li>准备工作：<br>模式一需要在微信公共平台配置回调地址：微信公共平台-&gt;微信支付-&gt;开发配置<br><img src="http://7xrc03.com1.z0.glb.clouddn.com/%E6%89%AB%E7%A0%81%E6%94%AF%E4%BB%98-%E5%9B%9E%E8%B0%83.png" alt="模式一回调配置"></li><li><p>开发流程：<br>◆ 商户后台根据微信支付规则生成二维码，展示给用户；<br>◆ 用户扫描二维码，微信支付系统将用户openid和productid以参数方式回调商户在公共平台设置的回调地址；<br>◆ 商户后台系统接收到微信回调请求，根据接收到openid和productid生成商户订单；<br>◆ 商户后台调用微信支付<a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_1" target="_blank" rel="external">统一下单</a>接口获取预付交易id（prepay_id）；<br>◆ 微信支付系统根据商户统一下单请求生成预支付交易，返回prepay_id；<br>◆ 商户系统得到prepay_id后返回给微信支付系统；<br>◆ 微信支付系统接收到prepay_id后发起用户端微信支付流程（拉起微信支付，输入密码，完成扣款）；<br>◆ 微信支付系统完成交易后向用户微信客户端发送支付结果通知；<br>◆ 微信支付系统通过发送异步消息，将支付结果发送至商户统一下单时填写的回调地址；<br>◆ 商户确认微信支付结果并更新订单状态，如商户后台未收到微信支付结果通知，可以通过调用<a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_2" target="_blank" rel="external">查询订单</a>接口主动查询订单支付结果。</p></li><li><p>实现<br>◆ 所需文件<br>lib/* ：PHP-SDK lib文件夹；<br>WxPay.NativePay.php：扫码支付实现类；</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">"wxPay/WxPay.Api.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * 扫码支付实现类</span><br><span class="line"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NativePay</span></span><br><span class="line"></span>&#123;</span><br><span class="line">  <span class="comment">/**</span><br><span class="line">   * </span><br><span class="line">   * 生成扫描支付URL,模式一</span><br><span class="line">   * <span class="doctag">@param</span> BizPayUrlInput $bizUrlInfo</span><br><span class="line">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">GetPrePayUrl</span><span class="params">(<span class="variable">$productId</span>)</span></span><br><span class="line">  </span>&#123;</span><br><span class="line">    <span class="variable">$biz</span> = <span class="keyword">new</span> WxPayBizPayUrl();</span><br><span class="line">    <span class="variable">$biz</span>-&gt;SetProduct_id(<span class="variable">$productId</span>);</span><br><span class="line">    <span class="variable">$values</span> = WxpayApi::bizpayurl(<span class="variable">$biz</span>);</span><br><span class="line">    <span class="variable">$url</span> = <span class="string">"weixin://wxpay/bizpayurl?"</span> . <span class="variable">$this</span>-&gt;ToUrlParams(<span class="variable">$values</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$url</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/**</span><br><span class="line">   * </span><br><span class="line">   * 参数数组转换为url参数</span><br><span class="line">   * <span class="doctag">@param</span> array $urlObj</span><br><span class="line">   */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">ToUrlParams</span><span class="params">(<span class="variable">$urlObj</span>)</span></span><br><span class="line">  </span>&#123;</span><br><span class="line">    <span class="variable">$buff</span> = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$urlObj</span> <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$v</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="variable">$buff</span> .= <span class="variable">$k</span> . <span class="string">"="</span> . <span class="variable">$v</span> . <span class="string">"&amp;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$buff</span> = trim(<span class="variable">$buff</span>, <span class="string">"&amp;"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$buff</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/**</span><br><span class="line">   * </span><br><span class="line">   * 生成直接支付url，支付url有效期为2小时,模式二</span><br><span class="line">   * <span class="doctag">@param</span> UnifiedOrderInput $input</span><br><span class="line">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">GetPayUrl</span><span class="params">(<span class="variable">$input</span>)</span></span><br><span class="line">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$input</span>-&gt;GetTrade_type() == <span class="string">"NATIVE"</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="variable">$result</span> = WxPayApi::unifiedOrder(<span class="variable">$input</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>◆ 生成二维码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$productid</span> = <span class="string">'123456789'</span>;</span><br><span class="line"><span class="variable">$notify</span> = <span class="keyword">new</span> NativePay();</span><br><span class="line"><span class="variable">$url</span> = <span class="variable">$notify</span>-&gt;GetPrePayUrl(<span class="variable">$productid</span>);</span><br></pre></td></tr></table></figure></p><p>返回的二维码链接格式为：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">weixin://wxpay/bizpayurl?appid=wx426b3015555a46be&amp;mch_id=1225312702&amp;nonce_str=hscvjb7ljo9h53hsn97qhszd5wh5aja6&amp;product_id=123456789&amp;time_stamp=1468641555&amp;sign=47FE32AA7DF1249D92353F1B6D79391A</span><br></pre></td></tr></table></figure></p><p>使用QRcode将链接转换为二维码。</p><p>◆ 扫码支付回调<br>用户扫码完成后，微信支付系统会将用户openid和productid发送至该回调接口，该回调接口接收到微信回调请求后需要完成：<br>1） 调用微信支付统一下单接口获得prepay_id；<br>2） 将prepay_id返回给微信服务器。<br>首先创建实现微信扫码支付模式一的回调接口类<code>NativeNotifyCallBack</code>:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NativeNotifyCallBack</span> <span class="keyword">extends</span> <span class="title">WxPayNotify</span></span><br><span class="line"></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">unifiedorder</span><span class="params">(<span class="variable">$openId</span>, <span class="variable">$product_id</span>)</span></span><br><span class="line">  </span>&#123;</span><br><span class="line">    <span class="comment">//统一下单</span></span><br><span class="line">    <span class="variable">$input</span> = <span class="keyword">new</span> WxPayUnifiedOrder();</span><br><span class="line">    <span class="variable">$input</span>-&gt;SetBody(<span class="string">"test"</span>);</span><br><span class="line">    <span class="variable">$input</span>-&gt;SetAttach(<span class="string">"test"</span>);</span><br><span class="line">    <span class="variable">$input</span>-&gt;SetOut_trade_no(WxPayConfig::MCHID.date(<span class="string">"YmdHis"</span>));</span><br><span class="line">    <span class="variable">$input</span>-&gt;SetTotal_fee(<span class="string">"1"</span>);</span><br><span class="line">    <span class="variable">$input</span>-&gt;SetTime_start(date(<span class="string">"YmdHis"</span>));</span><br><span class="line">    <span class="variable">$input</span>-&gt;SetTime_expire(date(<span class="string">"YmdHis"</span>, time() + <span class="number">600</span>));</span><br><span class="line">    <span class="variable">$input</span>-&gt;SetGoods_tag(<span class="string">"test"</span>);</span><br><span class="line">    <span class="comment">//设置微信支付结果通知回调地址</span></span><br><span class="line">    <span class="variable">$input</span>-&gt;SetNotify_url(<span class="string">"http://XXX.com/test/WxPayCallBack"</span>);</span><br><span class="line">    <span class="comment">//扫码支付的trade_type要设置为NATIVE</span></span><br><span class="line">    <span class="variable">$input</span>-&gt;SetTrade_type(<span class="string">"NATIVE"</span>);</span><br><span class="line">    <span class="variable">$input</span>-&gt;SetOpenid(<span class="variable">$openId</span>);</span><br><span class="line">    <span class="variable">$input</span>-&gt;SetProduct_id(<span class="variable">$product_id</span>);</span><br><span class="line">    <span class="variable">$result</span> = WxPayApi::unifiedOrder(<span class="variable">$input</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">NotifyProcess</span><span class="params">(<span class="variable">$data</span>, &amp;<span class="variable">$msg</span>)</span></span><br><span class="line">  </span>&#123;</span><br><span class="line">    <span class="comment">//echo "处理回调";</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(!array_key_exists(<span class="string">"openid"</span>, <span class="variable">$data</span>) ||</span><br><span class="line">      !array_key_exists(<span class="string">"product_id"</span>, <span class="variable">$data</span>))</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="variable">$msg</span> = <span class="string">"回调数据异常"</span>;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="variable">$openid</span> = <span class="variable">$data</span>[<span class="string">"openid"</span>];</span><br><span class="line">    <span class="variable">$product_id</span> = <span class="variable">$data</span>[<span class="string">"product_id"</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//统一下单</span></span><br><span class="line">    <span class="variable">$result</span> = <span class="variable">$this</span>-&gt;unifiedorder(<span class="variable">$openid</span>, <span class="variable">$product_id</span>);</span><br><span class="line">    <span class="keyword">if</span>(!array_key_exists(<span class="string">"appid"</span>, <span class="variable">$result</span>) ||</span><br><span class="line">       !array_key_exists(<span class="string">"mch_id"</span>, <span class="variable">$result</span>) ||</span><br><span class="line">       !array_key_exists(<span class="string">"prepay_id"</span>, <span class="variable">$result</span>))</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="variable">$msg</span> = <span class="string">"统一下单失败"</span>;</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">     &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$this</span>-&gt;SetData(<span class="string">"appid"</span>, <span class="variable">$result</span>[<span class="string">"appid"</span>]);</span><br><span class="line">    <span class="variable">$this</span>-&gt;SetData(<span class="string">"mch_id"</span>, <span class="variable">$result</span>[<span class="string">"mch_id"</span>]);</span><br><span class="line">    <span class="variable">$this</span>-&gt;SetData(<span class="string">"nonce_str"</span>, WxPayApi::getNonceStr());</span><br><span class="line">    <span class="variable">$this</span>-&gt;SetData(<span class="string">"prepay_id"</span>, <span class="variable">$result</span>[<span class="string">"prepay_id"</span>]);</span><br><span class="line">    <span class="variable">$this</span>-&gt;SetData(<span class="string">"result_code"</span>, <span class="string">"SUCCESS"</span>);</span><br><span class="line">    <span class="variable">$this</span>-&gt;SetData(<span class="string">"err_code_des"</span>, <span class="string">"OK"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在上一节<a href="http://yurixu.com/blog/2016/06/28/%E6%BC%AB%E8%B0%88%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98/">漫谈微信支付</a>中介绍过微信回调基础类<code>WxPayNotify</code>，支付模式一的回调类<code>NativeNotifyCallBack</code>继承自<code>WxPayNotify</code>，NativeNotifyCallBack需要实现基类中定义的方法<code>NotifyProcess</code>进行回调逻辑处理。<br><code>NativeNotifyCallBack</code>中<code>NotifyProcess</code>首先获取openid和product_id，然后传递给<code>unifiedorder</code>方法完成统一下单：<br><code>$result = $this-&gt;unifiedorder($openid, $product_id);</code>接收统一下单返回的结果，并将appid、mch_id、nonce_str、prepay_id等信息返回给微信。</p><p>回调方法：<br>假设商户在公共号平台设置的回调地址为：<code>http://XXX.com/test/NativeCallBack</code><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionNativeCallBack</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="variable">$notify</span> = <span class="keyword">new</span> NativeNotifyCallBack();</span><br><span class="line">  <span class="variable">$notify</span>-&gt;Handle(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>◆ 支付结果回调<br>支付结果回调用于接收微信服务器发送的支付结果通知，商户后台可能还需要执行更新订单状态以及其他操作。在统一下单接口中通过SetNotify_url进行设置。<br>首先定义处理微信支付结果的回调类<code>PayNotifyCallBack</code>:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PayNotifyCallBack</span> <span class="keyword">extends</span> <span class="title">WxPayNotify</span></span><br><span class="line"></span>&#123;</span><br><span class="line">  <span class="comment">//查询订单</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Queryorder</span><span class="params">(<span class="variable">$transaction_id</span>)</span></span><br><span class="line">  </span>&#123;</span><br><span class="line">    <span class="variable">$input</span> = <span class="keyword">new</span> WxPayOrderQuery();</span><br><span class="line">    <span class="variable">$input</span>-&gt;SetTransaction_id(<span class="variable">$transaction_id</span>);</span><br><span class="line">    <span class="variable">$result</span> = WxPayApi::orderQuery(<span class="variable">$input</span>);</span><br><span class="line">    <span class="keyword">if</span>(array_key_exists(<span class="string">"return_code"</span>, <span class="variable">$result</span>)</span><br><span class="line">      &amp;&amp; array_key_exists(<span class="string">"result_code"</span>, <span class="variable">$result</span>)</span><br><span class="line">      &amp;&amp; <span class="variable">$result</span>[<span class="string">"return_code"</span>] == <span class="string">"SUCCESS"</span></span><br><span class="line">      &amp;&amp; <span class="variable">$result</span>[<span class="string">"result_code"</span>] == <span class="string">"SUCCESS"</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//重写回调处理函数</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">NotifyProcess</span><span class="params">(<span class="variable">$data</span>, &amp;<span class="variable">$msg</span>)</span></span><br><span class="line">  </span>&#123;</span><br><span class="line">    <span class="variable">$notfiyOutput</span> = <span class="keyword">array</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(!array_key_exists(<span class="string">"transaction_id"</span>, <span class="variable">$data</span>))&#123;</span><br><span class="line">      <span class="variable">$msg</span> = <span class="string">"输入参数不正确"</span>;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//查询订单，判断订单真实性</span></span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$this</span>-&gt;Queryorder(<span class="variable">$data</span>[<span class="string">"transaction_id"</span>]))&#123;</span><br><span class="line">      <span class="variable">$msg</span> = <span class="string">"订单查询失败"</span>;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><code>PayNotifyCallBack</code>同样继承自<code>WxPayNotify</code>，需要重写<code>NotifyProcess</code>方法。在微信支付结果回调中，<code>NotifyProcess</code>需要完成的操作是调用<a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_2" target="_blank" rel="external">查询订单</a>接口，主动查询微信端订单状态。<br>◆ 回调并发控制<br>假设统一下单接口中定义的回调地址为：<code>http://XXX.com/test/WxPayCallBack</code>,<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">    * 微信支付回调函数</span><br><span class="line">    * <span class="doctag">@author</span> yuri 2015/6/26</span><br><span class="line">    */</span></span><br><span class="line">   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionWxPayCallBack</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="keyword">require_once</span> <span class="string">"WxPay.PayNotifyCallBack.php"</span>;</span><br><span class="line">       <span class="variable">$notify</span> = <span class="keyword">new</span> PayNotifyCallBack();</span><br><span class="line">       <span class="variable">$notify</span>-&gt;Handle(<span class="keyword">true</span>);        </span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p><p>多数情况下商户后台在接收到微信支付结果通知后会进行订单状态变更以及执行一些业务逻辑操作，因此需要对SDK做一定修改。通过阅读SDK我们知道后台最终都是通过<code>WxpayApi::replyNotify</code>方法将结果以XML的格式直接输出，方便微信服务器接收，修改<code>WxpayApi::replyNotify</code>，将XML作为结果返回：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * 直接输出xml</span><br><span class="line"> * <span class="doctag">@param</span> string $xml</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">replyNotify</span><span class="params">(<span class="variable">$xml</span>)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">  <span class="comment">//echo $xml;</span></span><br><span class="line">  <span class="comment">//modify by yuri 2015/6/26</span></span><br><span class="line">  <span class="keyword">return</span> <span class="variable">$xml</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>此时<code>WxpayApi::replyNotify</code>修改为：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">    * 微信支付回调函数</span><br><span class="line">    * <span class="doctag">@author</span> yuri 2015/6/26</span><br><span class="line">    */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionWxPayCallBack</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="keyword">require_once</span> <span class="string">"WxPay.PayNotifyCallBack.php"</span>;</span><br><span class="line">       <span class="variable">$notify</span> = <span class="keyword">new</span> PayNotifyCallBack();</span><br><span class="line">       <span class="variable">$xml</span> = <span class="variable">$notify</span>-&gt;Handle(<span class="keyword">true</span>);</span><br><span class="line">       <span class="variable">$result</span> = simplexml_load_string(<span class="variable">$xml</span>);</span><br><span class="line"></span><br><span class="line">       <span class="comment">//支付成功</span></span><br><span class="line">       <span class="keyword">if</span>(<span class="variable">$result</span>-&gt;return_code ==  <span class="string">'SUCCESS'</span> &amp;&amp; <span class="variable">$result</span>-&gt;return_msg == <span class="string">'OK'</span>) &#123;</span><br><span class="line">           <span class="variable">$postStr</span> = <span class="variable">$GLOBALS</span>[<span class="string">"HTTP_RAW_POST_DATA"</span>];</span><br><span class="line">           <span class="variable">$postStr</span> = simplexml_load_string(<span class="variable">$postStr</span>);</span><br><span class="line">           <span class="keyword">if</span>(<span class="variable">$postStr</span>) &#123;</span><br><span class="line">               <span class="variable">$out_trade_no</span> = <span class="variable">$postStr</span>-&gt;out_trade_no;         <span class="comment">//订单号</span></span><br><span class="line">               <span class="variable">$transaction_id</span> = <span class="variable">$postStr</span>-&gt;transaction_id;     <span class="comment">//交易id</span></span><br><span class="line">               <span class="comment">//处理更新订单状态等其他业务逻辑</span></span><br><span class="line">               <span class="variable">$this</span>-&gt;orderHandle(<span class="variable">$out_trade_no</span>, <span class="variable">$transaction_id</span>);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">echo</span> <span class="variable">$xml</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p><p><code>orderHandle</code>方法用于处理商户后台订单逻辑，由于微信异步通知可能会多次发送给商户系统，因此商户后台业务处理逻辑<strong>必须能够正确处理重复的通知</strong>，如果是更新订单状态，在进行处理之前需要先判断订单状态，防止重复更新；如果处理逻辑中涉及到数据表插入等操作，要采用数据锁进行并发控制。例如使用Redis进行并发控制，key设置为用户ID+订单号：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置redis防止并发写入</span></span><br><span class="line">      <span class="variable">$redis_key</span> = USERID_ORDERID.<span class="string">':'</span>.<span class="variable">$userid</span>.<span class="string">':'</span>.<span class="variable">$outtradeno</span>;</span><br><span class="line">      <span class="variable">$set_order</span> = Helper::setRedisCache(<span class="string">'setnx'</span>, <span class="keyword">array</span>(<span class="variable">$redis_key</span>, <span class="number">1</span>), Mod::app()-&gt;params-&gt;redisExpire[<span class="string">'useridOrderid'</span>]);</span><br><span class="line">      <span class="keyword">if</span>(<span class="variable">$set_order</span> &amp;&amp; <span class="variable">$set_order</span>[<span class="number">0</span>]) &#123;</span><br><span class="line">          <span class="comment">//执行更新订单、插入数据表等操作，在处理过程中如果遇到失败，需要及时删除redis，防止后续回调不能正常执行。</span></span><br><span class="line">          <span class="variable">$order</span>-&gt;paystate = <span class="number">1</span>;</span><br><span class="line">          <span class="variable">$nret</span> = <span class="variable">$order</span>-&gt;save();</span><br><span class="line">          <span class="keyword">if</span> (<span class="variable">$nret</span>) &#123;</span><br><span class="line">              <span class="comment">//进行后续处理</span></span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              <span class="comment">//保存失败，要及时删除redis防止后续回调操作被阻塞</span></span><br><span class="line">              Helper::delRedisCache(<span class="string">'del'</span>, <span class="keyword">array</span>(<span class="variable">$redis_key</span>));</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure></p><p><code>$set_order = Helper::setRedisCache(&#39;setnx&#39;, array($redis_key, 1), Mod::app()-&gt;params-&gt;redisExpire</code>使用setnx命令设置key的值为1，且缓存时间设置为24小时。SETNX，是「SET if Not eXists」的缩写，只有缓存不存在的时候才设置，可以利用它来实现锁的效果，但是使用setnx时有一些陷阱，具体可参考<a href="http://huoding.com/2015/09/14/463" target="_blank" rel="external">谈谈Redis的SETNX</a>这篇博文。<br><code>Helper::setRedisCache</code>是封装的添加/修改Redis缓存的公共方法：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">setRedisCache</span><span class="params">(<span class="variable">$command</span>, array <span class="variable">$params</span>, <span class="variable">$expired</span>)</span> </span>&#123;</span><br><span class="line">        <span class="variable">$ret</span> = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$command</span> &amp;&amp; <span class="variable">$params</span> &amp;&amp; !stristr(<span class="variable">$command</span>, <span class="string">'del'</span>) &amp;&amp; !stristr(<span class="variable">$command</span>, <span class="string">'rem'</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (count(<span class="variable">$params</span>) == <span class="number">1</span>) &#123; </span><br><span class="line">                <span class="variable">$ret</span> = Mod::app()-&gt;redis-&gt;multi(Redis::PIPELINE)-&gt;<span class="variable">$command</span>(<span class="variable">$params</span>[<span class="number">0</span>])-&gt;expire(<span class="variable">$params</span>[<span class="number">0</span>], <span class="variable">$expired</span>)-&gt;exec();</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (count(<span class="variable">$params</span>) == <span class="number">2</span>) &#123; </span><br><span class="line">                <span class="variable">$ret</span> = Mod::app()-&gt;redis-&gt;multi(Redis::PIPELINE)-&gt;<span class="variable">$command</span>(<span class="variable">$params</span>[<span class="number">0</span>], <span class="variable">$params</span>[<span class="number">1</span>])-&gt;expire(<span class="variable">$params</span>[<span class="number">0</span>], <span class="variable">$expired</span>)-&gt;exec();</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (count(<span class="variable">$params</span>) == <span class="number">3</span>) &#123; </span><br><span class="line">                <span class="variable">$ret</span> = Mod::app()-&gt;redis-&gt;multi(Redis::PIPELINE)-&gt;<span class="variable">$command</span>(<span class="variable">$params</span>[<span class="number">0</span>], <span class="variable">$params</span>[<span class="number">1</span>], <span class="variable">$params</span>[<span class="number">2</span>])-&gt;expire(<span class="variable">$params</span>[<span class="number">0</span>], <span class="variable">$expired</span>)-&gt;exec();</span><br><span class="line">            &#125;       </span><br><span class="line">        &#125;       </span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$ret</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>在实际支付过程中可能会出现这样一种情况：<br>用户通过扫码已经完成了支付，但是商户后台没有及时收到微信服务器发送的回调通知，导致商户后台订单状态无法及时更新，因此用户端看到的状态还是“未支付”，用户可能还会继续进行扫码尝试支付，这时在调用统一下单接口时，微信服务器返回的数据中result_code为FAIL，且提示该订单已经支付，此时商户后台需要主动去查询微信端订单状态并更新商户后台订单支付状态。<br>我在处理这种情况是的逻辑是：<br>1）查询商户后台订单状态，如果为未支付，执行步骤2，否则结束；<br>2）主动调用微信<a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_2" target="_blank" rel="external">查询订单</a>接口，获取订单状态及订单信息，如订单状态为已支付，执行步骤3；<br>3）商户后台主动更新订单状态以及相应业务逻辑处理。因为在业务逻辑处理中我们使用了数据锁机制，如果在主动更新订单状态的同时收到了微信回调请求，此时也不会发生重复处理的操作，保证了数据的一致性。</p><ul><li>总结：<br>◆ 模式一需要事先在公共号平台配置支付回调URL，而且整个支付流程中涉及两部分微信回调过程，每个微信回调过程<strong>对于支付结果通知的内容一定要做签名验证，防止数据泄漏导致出现“假通知”，造成资金损失。</strong><br>◆ 微信回调处理逻辑要采用数据锁进行并发控制，防止数据重复写入；</li></ul><h3 id="模式二："><a href="#模式二：" class="headerlink" title="模式二："></a>模式二：</h3><p>模式二要比模式一简单，不需要在公共号平台设置回调URL，直接调用统一下单接口得到code_url用于生成二维码，用户扫描二维码完成支付，同时微信将支付结果异步通知商户后台。</p><ul><li>开发流程：<br>◆ 商户后台根据商品生成商户订单；<br>◆ 商户后台调用微信支付统一下单接口生成预支付交易，并返回二维码链接code_url；<br>◆ 商户后台根据code_url生成二维码；<br>◆ 用户扫描二维码后微信端发起用户端微信支付流程（拉起微信支付，输入密码，完成扣款）；<br>◆ 微信支付系统完成交易后向用户微信客户端发送支付结果通知；<br>◆ 微信支付系统通过发送异步消息，将支付结果发送至商户统一下单时填写的回调地址；<br>◆ 商户确认微信支付结果并更新订单状态，如商户后台未收到微信支付结果通知，可以通过调用查询订单接口主动查询订单支付结果。</li></ul><p>◆ 所需文件<br>lib/* ：PHP-SDK lib文件夹；<br>WxPay.NativePay.php：扫码支付实现类；<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require_once</span> <span class="string">"wxPay/WxPay.Api.php"</span>;</span><br><span class="line"><span class="keyword">require_once</span> <span class="string">"WxPay.NativePay.php"</span>;</span><br><span class="line"><span class="variable">$notify</span> = <span class="keyword">new</span> NativePay();</span><br><span class="line"></span><br><span class="line"><span class="variable">$input</span> = <span class="keyword">new</span> WxPayUnifiedOrder();</span><br><span class="line"><span class="variable">$input</span>-&gt;SetBody(<span class="variable">$title</span>);</span><br><span class="line"><span class="variable">$input</span>-&gt;SetAttach(<span class="variable">$attach</span>);</span><br><span class="line"><span class="variable">$input</span>-&gt;SetOut_trade_no(<span class="variable">$orderid</span>);</span><br><span class="line"><span class="variable">$input</span>-&gt;SetTotal_fee(<span class="variable">$total_fee</span>);</span><br><span class="line"><span class="variable">$input</span>-&gt;SetTime_start(date(<span class="string">"YmdHis"</span>));</span><br><span class="line"><span class="variable">$input</span>-&gt;SetTime_expire(date(<span class="string">"YmdHis"</span>, time() + <span class="number">600</span>));</span><br><span class="line"><span class="variable">$input</span>-&gt;SetNotify_url(<span class="string">"http://XXX.com/test/WxPayCallBack"</span>);</span><br><span class="line"><span class="variable">$input</span>-&gt;SetTrade_type(<span class="string">"NATIVE"</span>);</span><br><span class="line"><span class="variable">$input</span>-&gt;SetProduct_id(<span class="variable">$orderid</span>);</span><br><span class="line"><span class="variable">$url</span> =  <span class="variable">$notify</span>-&gt;GetPayUrl(<span class="variable">$input</span>);</span><br></pre></td></tr></table></figure></p><p><code>GetPayUrl</code>方法完成了统一下单操作，并返回微信端接口调用结果。<br>注意：生成的code_url有效期为2小时。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">   * </span><br><span class="line">   * 生成直接支付url，支付url有效期为2小时,模式二</span><br><span class="line">   * <span class="doctag">@param</span> UnifiedOrderInput $input</span><br><span class="line">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">GetPayUrl</span><span class="params">(<span class="variable">$input</span>)</span></span><br><span class="line">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$input</span>-&gt;GetTrade_type() == <span class="string">"NATIVE"</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="variable">$result</span> = WxPayApi::unifiedOrder(<span class="variable">$input</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>模式二支付结果回调流程与模式一相同。</p><hr><h2 id="支付模式区别"><a href="#支付模式区别" class="headerlink" title="支付模式区别"></a>支付模式区别</h2><p>◆ 应用场景：<br>模式一生成的是固定二维码，方便打印，更适用于用户线下扫码支付；<br>模式二是商户后台先下单再生成支付二维码，具有时效性，更适用于线上扫码支付；<br>◆ 开发流程<br>模式一比模式二在支付过程中多一次回调流程，而且模式二流程更为简单；</p><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>扫码支付在四种支付方式中算是比较简单的一种，而且微信官方SDK已经对支付流程中需要的各种接口作了很好的封装，开发起来相对比较简单。<br>任何一种支付方式都少不了处理异步回调支付结果过程，在该过程中商户后台一定要做好签名验证，正确处理重复通知，保持数据的一致性，防止数据重入造成的数据混乱。</p><p>有关扫码支付的实现已介绍完毕，在下一节<a href="http://yurixu.com/blog/2016/07/22/%E6%BC%AB%E8%B0%88%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98-APP%E6%94%AF%E4%BB%98/">漫谈微信支付-APP支付</a>将会介绍APP支付的实现过程。<br>转载请注明出处：<a href="http://yurixu.com/blog/2016/07/15/%E6%BC%AB%E8%B0%88%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98-%E6%89%AB%E7%A0%81%E6%94%AF%E4%BB%98/">http://yurixu.com/blog/2016/07/15/漫谈微信支付-扫码支付/</a></p>]]></content>
    
    <summary type="html">
    
      漫谈微信支付-扫码支付
    
    </summary>
    
      <category term="PHP" scheme="http://yurixu.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://yurixu.com/tags/PHP/"/>
    
      <category term="支付" scheme="http://yurixu.com/tags/%E6%94%AF%E4%BB%98/"/>
    
  </entry>
  
  <entry>
    <title>漫谈微信支付</title>
    <link href="http://yurixu.com/blog/2016/06/28/%E6%BC%AB%E8%B0%88%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98/"/>
    <id>http://yurixu.com/blog/2016/06/28/漫谈微信支付/</id>
    <published>2016-06-28T14:54:15.000Z</published>
    <updated>2018-05-22T02:15:12.171Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xrc03.com1.z0.glb.clouddn.com/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98.jpeg" alt=""><br>本文对微信支付的应用场景、支付模式、准备工作、官方SDK等进行简要介绍。<br><a id="more"></a></p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>微信支付目前在生活中应用的越来越广泛，目前微信支付的应用模式有刷卡支付、公共号支付、扫码支付以及APP支付，每种支付模式都有不同的应用场景与之对应。</p><h2 id="支付模式"><a href="#支付模式" class="headerlink" title="支付模式"></a>支付模式</h2><h3 id="刷卡支付"><a href="#刷卡支付" class="headerlink" title="刷卡支付"></a>刷卡支付</h3><p>刷卡支付是用户展示微信钱包内的“刷卡条码/二维码”给商户系统扫描后直接完成支付的模式。主要应用线下面对面收银的场景。</p><h3 id="扫码支付"><a href="#扫码支付" class="headerlink" title="扫码支付"></a>扫码支付</h3><p>扫码支付是商户系统按微信支付协议生成支付二维码，用户再用微信“扫一扫”完成支付的模式。该模式适用于PC网站支付、实体店单品或订单支付、媒体广告支付等场景。</p><h3 id="公共号支付"><a href="#公共号支付" class="headerlink" title="公共号支付"></a>公共号支付</h3><p>公众号支付是用户在微信中打开商户的H5页面，商户在H5页面通过调用微信支付提供的JSAPI接口调起微信支付模块完成支付。应用场景有：<br>◆ 用户在微信公众账号内进入商家公众号，打开某个主页面，完成支付<br>◆ 用户的好友在朋友圈、聊天窗口等分享商家页面连接，用户点击链接打开商家页面，完成支付<br>◆ 将商户页面转换成二维码，用户扫描二维码后在微信浏览器中打开页面后完成支付。</p><h3 id="APP支付"><a href="#APP支付" class="headerlink" title="APP支付"></a>APP支付</h3><p>APP支付又称移动端支付，是商户通过在移动端应用APP中集成开放SDK调起微信支付模块完成支付的模式。</p><p>本系列文章主要介绍后三种支付模式，分别介绍三种不同支付模式的实现以及汇总实现过程中可能遇到问题。</p><hr><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><p>使用微信支付前需要进行微信支付接入，商户根据实际需求可以申请接入以上介绍的四种不同支付模式，其中APP支付模式需要首先在<a href="https://open.weixin.qq.com/" target="_blank" rel="external">微信开放平台</a>注册成为开发者，创建APP后才能继续申请，申请步骤可以参考<a href="http://kf.qq.com/faq/120911VrYVrA150906F3qqY3.html" target="_blank" rel="external">APP微信商户申请步骤</a>；<br>扫码支付和公共号支付需要先在<a href="http://mp.weixin.qq.com" target="_blank" rel="external">微信公共平台</a>注册公共号并进行认证，然后再继续申请微信支付，申请步骤可以参考<a href="http://kf.qq.com/faq/120911VrYVrA150905zeYjMZ.html" target="_blank" rel="external">公众平台微信支付商户申请步骤</a>。申请成功后，微信支付开发相关的账号信息会被发送至申请邮箱中，包括：<br><img src="http://7xrc03.com1.z0.glb.clouddn.com/%E5%89%8D%E6%9C%9F%E5%87%86%E5%A4%87.png" alt="前期准备"></p><table><thead><tr><th style="text-align:left">邮件中参数</th><th style="text-align:left">API参数名</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left">APPID</td><td style="text-align:left">appid</td><td style="text-align:left">微信公众账号或开放平台APP的唯一标识</td></tr><tr><td style="text-align:left">商户号</td><td style="text-align:left">mch_id</td><td style="text-align:left">微信支付分配的商户收款账号</td></tr><tr><td style="text-align:left">API密钥</td><td style="text-align:left">key</td><td style="text-align:left">交易过程生成签名的密钥，仅保留在商户系统和微信支付后台，不会在网络中传播</td></tr><tr><td style="text-align:left">Appsecret</td><td style="text-align:left">secret</td><td style="text-align:left">APPID对应的接口密码，用于获取接口调用凭证access_token时使用</td></tr></tbody></table><p>得到这些参数后就可以进行微信支付的开发了。</p><hr><h2 id="微信支付PHP-SDK"><a href="#微信支付PHP-SDK" class="headerlink" title="微信支付PHP-SDK"></a>微信支付PHP-SDK</h2><h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><p>微信提供了JAVA、.NET/C#、PHP三种类型的SDK，PHP版本的SDK目录结构如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SDK&#30446;&#24405;&#32467;&#26500;&#10;|-- cert&#10;|   |-- apiclient_cert.pem&#10;|   |-- apiclient_key.pem&#10;|-- index.php&#10;|-- lib&#10;|   |-- WxPay.Api.php&#10;|   |-- WxPay.Config.php&#10;|   |-- WxPay.Data.php&#10;|   |-- WxPay.Exception.php&#10;|   |-- WxPay.Notify.php&#10;|-- logs&#10;|-- example&#10;    |-- WxPay.JsApiPay.php&#10;    |-- WxPay.MicroPay.php&#10;    |-- WxPay.NativePay.php&#10;&#9;|-- download.php&#10;&#9;|-- micropay.php&#10;&#9;|-- native.php&#10;&#9;|-- native_notify.php&#10;&#9;|-- notify.php&#10;&#9;|-- orderquery.php&#10;&#9;|-- qrcode.php&#10;&#9;|-- refund.php&#10;&#9;|-- refundquery.php&#10;&#9;|-- jsapi.php&#10;    |-- log.php&#10;    |-- phpqrcode</span><br></pre></td></tr></table></figure></p><p>各个目录以及文件的说明如下：<br>◆ <strong>cert：证书的存放路径</strong><br>商户证书是微信提供的二进制文件，商户系统发起与微信支付后台服务器通信请求的时候，作为微信支付后台识别商户真实身份的凭据。<br><strong>商户证书在涉及资金回滚的微信支付接口中使用，包括：申请退款、撤销订单接口。在使用的过程中服务器要做好病毒和木马的防护措施，防止证书被窃取</strong>。<br>微信提供了四种商户证书：pkcs12格式、证书pem格式、证书密钥pem格式、CA证书，登录<a href="pay.weixin.qq.com">微信商户平台</a>–&gt;账户设置–&gt;API安全–&gt;证书下载，可以进行证书下载。PHP开发只需要用到证书pem格式、证书密钥pem格式，即apiclient_cert.pem和apiclient_key.pem。<br>◆ <strong>index.php：SDK的入口文件</strong><br>◆ <strong>lib：微信支付API库</strong><br>lib目录下的文件是微信支付开发用到的主要文件，提供了对微信支付的各种接口的封装。其中：<br><code>WxPay.Config.php</code>：封装了WxPayConfig类，提供了微信支付所需的基本配置信息包括：APPID、MCHID、KEY、APPSECRET、证书路径、代理设置、微信支付接口上报配置。<br><code>WxPay.Data.php</code>：接口输入参数的封装，包括：WxPayDataBase（数据对象基础类）、WxPayResults（接口调用结果类）、WxPayNotifyReply（微信支付回调基础类）、WxPayUnifiedOrder（微信支付统一下单类）、WxPayOrderQuery（查询订单类）、WxPayCloseOrder（关闭订单类）、WxPayRefund（申请退款类）、WxPayRefundQuery（查询退款类）、WxPayDownloadBill（下载对账单类）、WxPayReport（接口测试上报类）、WxPayShortUrl（短连接转换类）、WxPayMicroPay（刷卡支付类）、WxPayReverse（撤销订单类）、WxPayJsApiPay（公共号支付类）以及WxPayBizPayUrl（扫码支付模式一）<br>◆ <strong>logs：日志文件</strong><br>◆ <strong>example：样例程序</strong></p><h3 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h3><h4 id="WxPayDataBase类"><a href="#WxPayDataBase类" class="headerlink" title="WxPayDataBase类"></a>WxPayDataBase类</h4><p><em><font color="green">位置：lib/WxPay.Data.php</font></em><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * </span><br><span class="line"> * 数据对象基础类，该类中定义数据类最基本的行为，包括：</span><br><span class="line"> * 计算/设置/获取签名、输出xml格式的参数、从xml读取数据对象等</span><br><span class="line"> *</span><br><span class="line"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WxPayDataBase</span></span><br><span class="line"></span>&#123;</span><br><span class="line">  <span class="keyword">protected</span> <span class="variable">$values</span> = <span class="keyword">array</span>();</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/**</span><br><span class="line">  * 设置签名，详见签名生成算法</span><br><span class="line">  * <span class="doctag">@param</span> string $value </span><br><span class="line">  **/</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">SetSign</span><span class="params">()</span></span><br><span class="line">  </span>&#123;</span><br><span class="line">    <span class="variable">$sign</span> = <span class="variable">$this</span>-&gt;MakeSign();</span><br><span class="line">    <span class="variable">$this</span>-&gt;values[<span class="string">'sign'</span>] = <span class="variable">$sign</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$sign</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/**</span><br><span class="line">  * 获取签名，详见签名生成算法的值</span><br><span class="line">  * <span class="doctag">@return</span> 值</span><br><span class="line">  **/</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">GetSign</span><span class="params">()</span></span><br><span class="line">  </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$this</span>-&gt;values[<span class="string">'sign'</span>];</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/**</span><br><span class="line">  * 判断签名，详见签名生成算法是否存在</span><br><span class="line">  * <span class="doctag">@return</span> true 或 false</span><br><span class="line">  **/</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">IsSignSet</span><span class="params">()</span></span><br><span class="line">  </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> array_key_exists(<span class="string">'sign'</span>, <span class="variable">$this</span>-&gt;values);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span><br><span class="line">   * 输出xml字符</span><br><span class="line">   * <span class="doctag">@throws</span> WxPayException</span><br><span class="line">  **/</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">ToXml</span><span class="params">()</span></span><br><span class="line">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!is_array(<span class="variable">$this</span>-&gt;values) </span><br><span class="line">      || count(<span class="variable">$this</span>-&gt;values) &lt;= <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> WxPayException(<span class="string">"数组数据异常！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$xml</span> = <span class="string">"&lt;xml&gt;"</span>;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$this</span>-&gt;values <span class="keyword">as</span> <span class="variable">$key</span>=&gt;<span class="variable">$val</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">if</span> (is_numeric(<span class="variable">$val</span>))&#123;</span><br><span class="line">    <span class="variable">$xml</span>.=<span class="string">"&lt;"</span>.<span class="variable">$key</span>.<span class="string">"&gt;"</span>.<span class="variable">$val</span>.<span class="string">"&lt;/"</span>.<span class="variable">$key</span>.<span class="string">"&gt;"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//CDATA 部分中的所有内容都会被解析器忽略。</span></span><br><span class="line">    <span class="variable">$xml</span>.=<span class="string">"&lt;"</span>.<span class="variable">$key</span>.<span class="string">"&gt;&lt;![CDATA["</span>.<span class="variable">$val</span>.<span class="string">"]]&gt;&lt;/"</span>.<span class="variable">$key</span>.<span class="string">"&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$xml</span>.=<span class="string">"&lt;/xml&gt;"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$xml</span>; </span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 将xml转为array</span><br><span class="line">     * <span class="doctag">@param</span> string $xml</span><br><span class="line">     * <span class="doctag">@throws</span> WxPayException</span><br><span class="line">     */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">FromXml</span><span class="params">(<span class="variable">$xml</span>)</span></span><br><span class="line">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$xml</span>)&#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> WxPayException(<span class="string">"xml数据异常！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="comment">//将XML转为array</span></span><br><span class="line">        <span class="comment">//禁止引用外部xml实体</span></span><br><span class="line">        libxml_disable_entity_loader(<span class="keyword">true</span>);</span><br><span class="line">        <span class="variable">$this</span>-&gt;values = json_decode(json_encode(simplexml_load_string(<span class="variable">$xml</span>, <span class="string">'SimpleXMLElement'</span>, LIBXML_NOCDATA)), <span class="keyword">true</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$this</span>-&gt;values;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/**</span><br><span class="line">   * 格式化参数格式化成url参数</span><br><span class="line">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">ToUrlParams</span><span class="params">()</span></span><br><span class="line">  </span>&#123;</span><br><span class="line">    <span class="variable">$buff</span> = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$this</span>-&gt;values <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$v</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span>(<span class="variable">$k</span> != <span class="string">"sign"</span> &amp;&amp; <span class="variable">$v</span> != <span class="string">""</span> &amp;&amp; !is_array(<span class="variable">$v</span>))&#123;</span><br><span class="line">        <span class="variable">$buff</span> .= <span class="variable">$k</span> . <span class="string">"="</span> . <span class="variable">$v</span> . <span class="string">"&amp;"</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$buff</span> = trim(<span class="variable">$buff</span>, <span class="string">"&amp;"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$buff</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/**</span><br><span class="line">   * 生成签名</span><br><span class="line">   * <span class="doctag">@return</span> 签名，本函数不覆盖sign成员变量，如要设置签名需要调用SetSign方法赋值</span><br><span class="line">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">MakeSign</span><span class="params">()</span></span><br><span class="line">  </span>&#123;</span><br><span class="line">    <span class="comment">//签名步骤一：按字典序排序参数</span></span><br><span class="line">    ksort(<span class="variable">$this</span>-&gt;values);</span><br><span class="line">    <span class="variable">$string</span> = <span class="variable">$this</span>-&gt;ToUrlParams();</span><br><span class="line">    <span class="comment">//签名步骤二：在string后加入KEY</span></span><br><span class="line">    <span class="variable">$string</span> = <span class="variable">$string</span> . <span class="string">"&amp;key="</span>.WxPayConfig::KEY;</span><br><span class="line">    <span class="comment">//签名步骤三：MD5加密</span></span><br><span class="line">    <span class="variable">$string</span> = md5(<span class="variable">$string</span>);</span><br><span class="line">    <span class="comment">//签名步骤四：所有字符转为大写</span></span><br><span class="line">    <span class="variable">$result</span> = strtoupper(<span class="variable">$string</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/**</span><br><span class="line">   * 获取设置的值</span><br><span class="line">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">GetValues</span><span class="params">()</span></span><br><span class="line">  </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$this</span>-&gt;values;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>WxPayDataBase是WxPay.Data.php文件中其他类的基类，定义了数据类的基本行为，包括：计算/设置/获取签名、输出XML格式的参数、从XML读取数据对象等。<br>变量$values存储各个接口参数，$values输出为XML时，对于非数字类型的变量使用CDATA进行标记，防止XML解析器进行解析，同理将XML对象转换为$value数组时，使用LIBXML_NOCDATA的方式：<code>$this-&gt;values = json_decode(json_encode(simplexml_load_string($xml, &#39;SimpleXMLElement&#39;, LIBXML_NOCDATA)), true);</code><br><strong>微信支付签名生成规则：</strong><br>微信支付的签名生成由四个步骤组成：<br>◆ 将接口参数名按照字典顺序排序并格式化为URL参数<br>◆ 末尾拼接key<br>◆ MD5加密<br>◆ 所有字符转为大写</p><h4 id="WxPayResults类"><a href="#WxPayResults类" class="headerlink" title="WxPayResults类"></a>WxPayResults类</h4><p><em><font color="green">位置：lib/WxPay.Data.php</font></em><br><code>WxPayResults</code>类继承自数据对象基础类<code>WxPayDataBase</code>，主要用来处理接口调用结果，方法<code>Init</code>和<code>InitFromArray</code>均是初始化一个WxPayResults对象，Init方法使用接口调用返回的XML数据进行初始化并强制验证签名，返回数组；InitFromArray方法使用数组初始化WxPayResults对象的values，返回实例化后的WxPayResults对象。</p><h4 id="WxPayNotifyReply类"><a href="#WxPayNotifyReply类" class="headerlink" title="WxPayNotifyReply类"></a>WxPayNotifyReply类</h4><p><em><font color="green">位置：lib/WxPay.Data.php</font></em><br><code>WxPayNotifyReply</code>类同样继承自数据对象基础类<code>WxPayDataBase</code>，用来处理授权回调，主要获取/设置return_code和return_msg。<br>WxPay.Data.php文件中定义的剩余其他类均是对各相应业务接口参数的合法性检测，包括获取参数、设置参数以及检测参数是否存在（例如：SetAppid、GetAppid、IsAppidSet）。</p><h4 id="WxPayApi类"><a href="#WxPayApi类" class="headerlink" title="WxPayApi类"></a>WxPayApi类</h4><p><em><font color="green">位置：lib/WxPay.Api.php</font></em><br>WxPayApi包含了所有微信支付API的封装，各个API实现的模式均为：<br>◆ 设置/校验接口参数<br>◆ 生成签名<br>◆ 接口参数转换为XML字符串并记录请求开始时间<br>◆ POST方式提交XML至接口URL<br>◆ 返回的XML结果转换为数组<br>◆ 记录请求结束时间并将请求结果上报微信<br>以<a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_1" target="_blank" rel="external">统一下单</a>API为例：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">   * </span><br><span class="line">   * 统一下单，WxPayUnifiedOrder中out_trade_no、body、total_fee、trade_type必填</span><br><span class="line">   * appid、mchid、spbill_create_ip、nonce_str不需要填入</span><br><span class="line">   * <span class="doctag">@param</span> WxPayUnifiedOrder $inputObj</span><br><span class="line">   * <span class="doctag">@param</span> int $timeOut</span><br><span class="line">   * <span class="doctag">@throws</span> WxPayException</span><br><span class="line">   * <span class="doctag">@return</span> 成功时返回，其他抛异常</span><br><span class="line">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">unifiedOrder</span><span class="params">(<span class="variable">$inputObj</span>, <span class="variable">$timeOut</span> = <span class="number">6</span>)</span></span><br><span class="line">  </span>&#123;</span><br><span class="line">    <span class="variable">$url</span> = <span class="string">"https://api.mch.weixin.qq.com/pay/unifiedorder"</span>;</span><br><span class="line">    <span class="comment">//检测必填参数</span></span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$inputObj</span>-&gt;IsOut_trade_noSet()) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> WxPayException(<span class="string">"缺少统一支付接口必填参数out_trade_no！"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(!<span class="variable">$inputObj</span>-&gt;IsBodySet())&#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> WxPayException(<span class="string">"缺少统一支付接口必填参数body！"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(!<span class="variable">$inputObj</span>-&gt;IsTotal_feeSet()) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> WxPayException(<span class="string">"缺少统一支付接口必填参数total_fee！"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(!<span class="variable">$inputObj</span>-&gt;IsTrade_typeSet()) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> WxPayException(<span class="string">"缺少统一支付接口必填参数trade_type！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//关联参数</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$inputObj</span>-&gt;GetTrade_type() == <span class="string">"JSAPI"</span> &amp;&amp; !<span class="variable">$inputObj</span>-&gt;IsOpenidSet())&#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> WxPayException(<span class="string">"统一支付接口中，缺少必填参数openid！trade_type为JSAPI时，openid为必填参数！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$inputObj</span>-&gt;GetTrade_type() == <span class="string">"NATIVE"</span> &amp;&amp; !<span class="variable">$inputObj</span>-&gt;IsProduct_idSet())&#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> WxPayException(<span class="string">"统一支付接口中，缺少必填参数product_id！trade_type为JSAPI时，product_id为必填参数！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//异步通知url未设置，则使用配置文件中的url</span></span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$inputObj</span>-&gt;IsNotify_urlSet())&#123;</span><br><span class="line">      <span class="comment">//坑!WxPayConfig中没有该配置项</span></span><br><span class="line">      <span class="variable">$inputObj</span>-&gt;SetNotify_url(WxPayConfig::NOTIFY_URL);<span class="comment">//异步通知url</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$inputObj</span>-&gt;SetAppid(WxPayConfig::APPID);<span class="comment">//公众账号ID</span></span><br><span class="line">    <span class="variable">$inputObj</span>-&gt;SetMch_id(WxPayConfig::MCHID);<span class="comment">//商户号</span></span><br><span class="line">    <span class="variable">$inputObj</span>-&gt;SetSpbill_create_ip(<span class="variable">$_SERVER</span>[<span class="string">'REMOTE_ADDR'</span>]);<span class="comment">//终端ip  </span></span><br><span class="line">    <span class="comment">//$inputObj-&gt;SetSpbill_create_ip("1.1.1.1");      </span></span><br><span class="line">    <span class="variable">$inputObj</span>-&gt;SetNonce_str(<span class="keyword">self</span>::getNonceStr());<span class="comment">//随机字符串</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//签名</span></span><br><span class="line">    <span class="variable">$inputObj</span>-&gt;SetSign();</span><br><span class="line">    <span class="variable">$xml</span> = <span class="variable">$inputObj</span>-&gt;ToXml();</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$startTimeStamp</span> = <span class="keyword">self</span>::getMillisecond();<span class="comment">//请求开始时间</span></span><br><span class="line">    <span class="variable">$response</span> = <span class="keyword">self</span>::postXmlCurl(<span class="variable">$xml</span>, <span class="variable">$url</span>, <span class="keyword">false</span>, <span class="variable">$timeOut</span>);</span><br><span class="line">    <span class="variable">$result</span> = WxPayResults::Init(<span class="variable">$response</span>);</span><br><span class="line">    <span class="keyword">self</span>::reportCostTime(<span class="variable">$url</span>, <span class="variable">$startTimeStamp</span>, <span class="variable">$result</span>);<span class="comment">//上报请求花费时间</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>扫码支付、公共号支付以及APP支付都会使用统一下单API，即它是这三种支付模式的公共接口。<br>统一下单API接收2个参数：$inputObj和$timeOut，$inputObj是WxPayUnifiedOrder类的对象，WxPayUnifiedOrder类存在于文件lib/WxPay.Data.php中，用于验证统一下单接口参数的合法性；$timeOut用来设置post请求的超时时间。<br>统一下单接口官方WIKI文档中给出的必填参数有appid、mch_id、nonce_str、sign、body、out_trade_no、total_fee、spbill_create_ip、notify_url、trade_type；对于扫码支付模式还必须传参数product_id；对于公共号支付（JSAPI）openid参数也为必填项，所以API接口中首先对需要用户主动传递的参数body、out_trade_no、total_fee、trade_type进行存在性校验；对关联参数product_id和openid需要根据支付模式的不同进行关联验证。<br>异步通知回调地址参数notify_url，<font color="red">此处官方API中存在错误：</font><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="variable">$inputObj</span>-&gt;IsNotify_urlSet())&#123;</span><br><span class="line">            <span class="comment">//坑!WxPayConfig中没有该配置项</span></span><br><span class="line">            <span class="variable">$inputObj</span>-&gt;SetNotify_url(WxPayConfig::NOTIFY_URL);<span class="comment">//异步通知url</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>因为WxPayConfig文件中不存在常量NOTIFY_URL，所以可以自行在WxPayConfig文件中添加NOTIFY_URL常量或者在每次调用统一下单接口时全部主动传递异步回调地址。<br><strong>生成随机字符串：</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">   * </span><br><span class="line">   * 产生随机字符串，不长于32位</span><br><span class="line">   * <span class="doctag">@param</span> int $length</span><br><span class="line">   * <span class="doctag">@return</span> 产生的随机字符串</span><br><span class="line">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getNonceStr</span><span class="params">(<span class="variable">$length</span> = <span class="number">32</span>)</span> </span><br><span class="line">  </span>&#123;</span><br><span class="line">    <span class="variable">$chars</span> = <span class="string">"abcdefghijklmnopqrstuvwxyz0123456789"</span>;  </span><br><span class="line">    <span class="variable">$str</span> =<span class="string">""</span>;</span><br><span class="line">    <span class="keyword">for</span> ( <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$length</span>; <span class="variable">$i</span>++ )  &#123;  </span><br><span class="line">      <span class="variable">$str</span> .= substr(<span class="variable">$chars</span>, mt_rand(<span class="number">0</span>, strlen(<span class="variable">$chars</span>)-<span class="number">1</span>), <span class="number">1</span>);  </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$str</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>原理也比较简单，首先列举所有小写字母和数字，然后使用mt_rand方法从字符串中随机得到一个开始位置并截取一个字符，根据所需要产生的随机字符串长度进行拼接。<br>设置完接口所需的各个参数后，最后调用生成签名方法，<font color="red">需要注意的是微信支付生成签名时，字段名称区分大小写</font>。<br>所有接口数据最终会通过<code>postXmlCurl</code>方法发送到微信服务器:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * 以post方式提交xml到对应的接口url</span><br><span class="line"> * <span class="doctag">@param</span> string $xml  需要post的xml数据</span><br><span class="line"> * <span class="doctag">@param</span> string $url  url</span><br><span class="line"> * <span class="doctag">@param</span> bool $useCert 是否需要证书，默认不需要</span><br><span class="line"> * <span class="doctag">@param</span> int $second   url执行超时时间，默认30s</span><br><span class="line"> * <span class="doctag">@throws</span> WxPayException</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">postXmlCurl</span><span class="params">(<span class="variable">$xml</span>, <span class="variable">$url</span>, <span class="variable">$useCert</span> = false, <span class="variable">$second</span> = <span class="number">30</span>)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">  <span class="variable">$ch</span> = curl_init();</span><br><span class="line">  <span class="comment">//设置超时</span></span><br><span class="line">  curl_setopt(<span class="variable">$ch</span>, CURLOPT_TIMEOUT, <span class="variable">$second</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//如果有配置代理这里就设置代理</span></span><br><span class="line">  <span class="keyword">if</span>(WxPayConfig::CURL_PROXY_HOST != <span class="string">"0.0.0.0"</span> </span><br><span class="line">    &amp;&amp; WxPayConfig::CURL_PROXY_PORT != <span class="number">0</span>)&#123;</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>,CURLOPT_PROXY, WxPayConfig::CURL_PROXY_HOST);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>,CURLOPT_PROXYPORT, WxPayConfig::CURL_PROXY_PORT);</span><br><span class="line">  &#125;</span><br><span class="line">  curl_setopt(<span class="variable">$ch</span>,CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">  curl_setopt(<span class="variable">$ch</span>,CURLOPT_SSL_VERIFYPEER,<span class="keyword">FALSE</span>);</span><br><span class="line">  curl_setopt(<span class="variable">$ch</span>,CURLOPT_SSL_VERIFYHOST,<span class="keyword">FALSE</span>);</span><br><span class="line">  <span class="comment">//设置header</span></span><br><span class="line">  curl_setopt(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="keyword">FALSE</span>);</span><br><span class="line">  <span class="comment">//要求结果为字符串且输出到屏幕上</span></span><br><span class="line">  curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="keyword">TRUE</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$useCert</span> == <span class="keyword">true</span>)&#123;</span><br><span class="line">    <span class="comment">//设置证书</span></span><br><span class="line">    <span class="comment">//使用证书：cert 与 key 分别属于两个.pem文件</span></span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>,CURLOPT_SSLCERTTYPE,<span class="string">'PEM'</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>,CURLOPT_SSLCERT, WxPayConfig::SSLCERT_PATH);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>,CURLOPT_SSLKEYTYPE,<span class="string">'PEM'</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>,CURLOPT_SSLKEY, WxPayConfig::SSLKEY_PATH);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//post提交方式</span></span><br><span class="line">  curl_setopt(<span class="variable">$ch</span>, CURLOPT_POST, <span class="keyword">TRUE</span>);</span><br><span class="line">  curl_setopt(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="variable">$xml</span>);</span><br><span class="line">  <span class="comment">//运行curl</span></span><br><span class="line">  <span class="variable">$data</span> = curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">  <span class="comment">//返回结果</span></span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$data</span>)&#123;</span><br><span class="line">    curl_close(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">    <span class="variable">$error</span> = curl_errno(<span class="variable">$ch</span>);</span><br><span class="line">    curl_close(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> WxPayException(<span class="string">"curl出错，错误码:$error"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>所有接口参数以XML格式发送给微信服务器，微信服务器同样以XML格式返回接口调用结果。<code>$result = WxPayResults::Init($response);</code>将微信返回的XML结果转换为数组形式并返回。</p><h4 id="WxPayNotify类"><a href="#WxPayNotify类" class="headerlink" title="WxPayNotify类"></a>WxPayNotify类</h4><p><em><font color="green">位置：lib/WxPay.Notify.php</font></em><br>WxPayNotify类是进行业务回调处理的基础类，它继承自WxPayNotifyReply类。WxPayNotify类包含的方法有Handle、NotifyProcess、NotifyCallBack以及ReplyNotify。其中Handle方法是回调处理的入口函数：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * </span><br><span class="line"> * 回调入口</span><br><span class="line"> * <span class="doctag">@param</span> bool $needSign  是否需要签名输出</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">final</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Handle</span><span class="params">(<span class="variable">$needSign</span> = true)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">  <span class="variable">$msg</span> = <span class="string">"OK"</span>;</span><br><span class="line">  <span class="comment">//当返回false的时候，表示notify中调用NotifyCallBack回调失败获取签名校验失败，此时直接回复失败</span></span><br><span class="line">  <span class="variable">$result</span> = WxpayApi::notify(<span class="keyword">array</span>(<span class="variable">$this</span>, <span class="string">'NotifyCallBack'</span>), <span class="variable">$msg</span>);</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$result</span> == <span class="keyword">false</span>)&#123;</span><br><span class="line">    <span class="variable">$this</span>-&gt;SetReturn_code(<span class="string">"FAIL"</span>);</span><br><span class="line">    <span class="variable">$this</span>-&gt;SetReturn_msg(<span class="variable">$msg</span>);</span><br><span class="line">    <span class="variable">$this</span>-&gt;ReplyNotify(<span class="keyword">false</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//该分支在成功回调到NotifyCallBack方法，处理完成之后流程</span></span><br><span class="line">    <span class="variable">$this</span>-&gt;SetReturn_code(<span class="string">"SUCCESS"</span>);</span><br><span class="line">    <span class="variable">$this</span>-&gt;SetReturn_msg(<span class="string">"OK"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable">$this</span>-&gt;ReplyNotify(<span class="variable">$needSign</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>WxpayApi类的notify方法为：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">   * </span><br><span class="line">   * 支付结果通用通知</span><br><span class="line">   * <span class="doctag">@param</span> function $callback</span><br><span class="line">   * 直接回调函数使用方法: notify(you_function);</span><br><span class="line">   * 回调类成员函数方法:notify(array($this, you_function));</span><br><span class="line">   * $callback  原型为：function function_name($data)&#123;&#125;</span><br><span class="line">   */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">notify</span><span class="params">(<span class="variable">$callback</span>, &amp;<span class="variable">$msg</span>)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">  <span class="comment">//获取通知的数据</span></span><br><span class="line">  <span class="variable">$xml</span> = <span class="variable">$GLOBALS</span>[<span class="string">'HTTP_RAW_POST_DATA'</span>];</span><br><span class="line">  <span class="comment">//如果返回成功则验证签名</span></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="variable">$result</span> = WxPayResults::Init(<span class="variable">$xml</span>);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (WxPayException <span class="variable">$e</span>)&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="variable">$e</span>-&gt;errorMessage();</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> call_user_func(<span class="variable">$callback</span>, <span class="variable">$result</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>首先分析方法<code>notify</code>：<code>$GLOBALS[&#39;HTTP_RAW_POST_DATA&#39;];</code>获取到微信服务器返回的XML结果，通过WxPayResults的Init方法得到返回结果数组，以参数的方式传递给call_user_func方法。如果使用类方法作为call_user_func的参数，需要使用：array($className, $functionName)的方式传递参数，因此<code>$result = WxpayApi::notify(array($this, &#39;NotifyCallBack&#39;), $msg);</code>的含义为：将微信返回的结果数组作为参数传递给函数NotifyCallBack，$result为NotifyCallBack方法的返回结果。<br>在NotifyCallBack方法中调用NotifyProcess，该方法需要用户在继承WxPayNotify类时进行重写（后续微信支付实现时需要重写该方法）。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * </span><br><span class="line"> * 回复通知</span><br><span class="line"> * <span class="doctag">@param</span> bool $needSign 是否需要签名输出</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">final</span> <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">ReplyNotify</span><span class="params">(<span class="variable">$needSign</span> = true)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">  <span class="comment">//如果需要签名</span></span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$needSign</span> == <span class="keyword">true</span> &amp;&amp; </span><br><span class="line">   <span class="comment">//$this-&gt;GetReturn_code($return_code) == "SUCCESS")</span></span><br><span class="line">        <span class="comment">//又现一处SDK错误，$return_code多余</span></span><br><span class="line">        <span class="variable">$this</span>-&gt;GetReturn_code() == <span class="string">"SUCCESS"</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="variable">$this</span>-&gt;SetSign();</span><br><span class="line">  &#125;</span><br><span class="line">  WxpayApi::replyNotify(<span class="variable">$this</span>-&gt;ToXml());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><code>ReplyNotify</code>直接输出回调处理完成后的XML数据。因为是回调系统，直接输出XML后，微信后台可以获取到该输出内容，所以不需要开发者主动将结果发送给微信后台。<br>此处官方SDK又出现一处错误：<code>GetReturn_code</code>方法不需要传递参数，应该把$return_code删除。</p><p>微信支付相关的准备工作已介绍完毕，在下一节<a href="http://yurixu.com/blog/2016/07/15/%E6%BC%AB%E8%B0%88%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98-%E6%89%AB%E7%A0%81%E6%94%AF%E4%BB%98/">漫谈微信支付-扫码支付</a>将会介绍扫码支付的实现过程。<br>转载请注明出处：<a href="http://yurixu.com/blog/2016/06/28/%E6%BC%AB%E8%B0%88%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98/">http://yurixu.com/blog/2016/06/28/漫谈微信支付/</a></p>]]></content>
    
    <summary type="html">
    
      漫谈微信支付
    
    </summary>
    
      <category term="PHP" scheme="http://yurixu.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://yurixu.com/tags/PHP/"/>
    
      <category term="支付" scheme="http://yurixu.com/tags/%E6%94%AF%E4%BB%98/"/>
    
  </entry>
  
  <entry>
    <title>Windows开启cUrl模块（Call to undefined function curl_init()）</title>
    <link href="http://yurixu.com/blog/2016/05/10/Windows%E5%BC%80%E5%90%AFcUrl%E6%A8%A1%E5%9D%97%EF%BC%88Call-to-undefined-function-curl-init-%EF%BC%89/"/>
    <id>http://yurixu.com/blog/2016/05/10/Windows开启cUrl模块（Call-to-undefined-function-curl-init-）/</id>
    <published>2016-05-10T00:00:49.000Z</published>
    <updated>2018-05-22T02:15:12.170Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xrc03.com1.z0.glb.clouddn.com/cUrl.gif" alt=""></p><ul><li>开启php_curl.dll扩展<br>去掉PHP配置文件php.ini中<code>;extension=php_curl.dll</code>前面的分号；</li><li>检查php_curl.dll<br>在extension_dir对应的扩展目录中查找是否存在php_curl.dll，没有需要下载</li><li>拷贝libeay32.dll和ssleay32.dll<br>将PHP目录中的libeay32.dll和ssleay32.dll文件拷贝至C:\Windows\System32（64位复制到SysWOW64下）</li><li>重启Apache或IIS</li></ul><p>—- 完结 —-</p>]]></content>
    
    <summary type="html">
    
      Windows下如何开启cUrl模块
    
    </summary>
    
      <category term="PHP" scheme="http://yurixu.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://yurixu.com/tags/PHP/"/>
    
      <category term="网络" scheme="http://yurixu.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>《PHP和MySQL Web开发》知识框架</title>
    <link href="http://yurixu.com/blog/2016/04/05/%E3%80%8APHP%E5%92%8CMySQL-Web%E5%BC%80%E5%8F%91%E3%80%8B%E7%9F%A5%E8%AF%86%E6%A1%86%E6%9E%B6/"/>
    <id>http://yurixu.com/blog/2016/04/05/《PHP和MySQL-Web开发》知识框架/</id>
    <published>2016-04-05T14:41:57.000Z</published>
    <updated>2018-05-22T02:15:12.170Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xr2qq.com1.z0.glb.clouddn.com/PHP%E5%92%8CMySQL%20Web%E5%BC%80%E5%8F%91.jpg" alt=""></p><h2 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h2><p>《PHP和MySQL Web开发》算是PHP的经典入门书了，这个月把它读了两遍，顺便整理下整本书的知识体系。<br><a id="more"></a></p><h3 id="PHP和MySQL-Web开发知识框架"><a href="#PHP和MySQL-Web开发知识框架" class="headerlink" title="PHP和MySQL Web开发知识框架"></a>PHP和MySQL Web开发知识框架</h3><p><img src="http://7xrc03.com1.z0.glb.clouddn.com/PHP%E5%92%8CMySQL%E6%A1%86%E6%9E%B6.png" alt="PHP和MySQL框架"></p><h3 id="PHP知识框架"><a href="#PHP知识框架" class="headerlink" title="PHP知识框架"></a>PHP知识框架</h3><p><img src="http://7xrc03.com1.z0.glb.clouddn.com/PHP%E7%9F%A5%E8%AF%86%E6%A1%86%E6%9E%B6.png" alt="PHP知识框架"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xr2qq.com1.z0.glb.clouddn.com/PHP%E5%92%8CMySQL%20Web%E5%BC%80%E5%8F%91.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;序言&quot;&gt;&lt;a href=&quot;#序言&quot; class=&quot;headerlink&quot; title=&quot;序言&quot;&gt;&lt;/a&gt;序言&lt;/h2&gt;&lt;p&gt;《PHP和MySQL Web开发》算是PHP的经典入门书了，这个月把它读了两遍，顺便整理下整本书的知识体系。&lt;br&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="http://yurixu.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="MySQL" scheme="http://yurixu.com/tags/MySQL/"/>
    
      <category term="Python" scheme="http://yurixu.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>《沟通的艺术》读书笔记</title>
    <link href="http://yurixu.com/blog/2016/03/19/%E3%80%8A%E6%B2%9F%E9%80%9A%E7%9A%84%E8%89%BA%E6%9C%AF%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>http://yurixu.com/blog/2016/03/19/《沟通的艺术》读书笔记/</id>
    <published>2016-03-19T01:15:18.000Z</published>
    <updated>2018-05-22T02:15:12.169Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xr2qq.com1.z0.glb.clouddn.com/%E6%B2%9F%E9%80%9A%E7%9A%84%E8%89%BA%E6%9C%AF-%E6%9D%8E%E5%85%83%E7%A7%80.jpg" alt=""></p><h2 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h2><p>本来打算读罗纳德·阿德勒著作的《沟通的艺术》，但是微信读书一直没有上架这本书，无奈就选了一本李元秀著作的《沟通的艺术》，读到一半实在读不下去了，都是成段成段的讲道理，读起来实在是乏味。道理谁都懂，关键是得启发别人如何做才行。本文是对本书部分内容的摘录。<br><a id="more"></a></p><ul><li><strong>人最大的悲哀莫过于别人对你的不在乎，因为“在乎”，是对你的一种认可和尊重，也是一个人价值的体现。</strong><br>心得：如果你做任何事别人都对你不屑一顾，说明你已经在他人心里失去了基本的尊重和认可，所以在与他人相处时，要多为他人着想，学会认可他人。</li><li><strong>建设人际关系的四个关键：待人诚实守信、善于给予，舍得给予、注意倾听，体谅他人、用心维护，勤加浇灌。</strong><br>心得：诚实守信是基础，也是基本的道德底线；人不能一味的向他人索取，而不予以回报。赠人玫瑰，手留余香就是这个道理；倾听是一门艺术；许多友谊败给了时间和距离，如果不勤加联系，就会逐渐变成陌生人。</li><li><strong>学会欣赏别人，会增进双方的关系。</strong><br>不要乱给别人贴标签，要学会多看别人的长处，借鉴别人优秀的方面。</li><li><strong>如果你打不败他们，或者打败他们也没有好处。那么就和他们合作     –拿破仑</strong></li><li><strong>人与人之间应该相互给个台阶下，凡事要替别人多想想。</strong> </li><li>获得成功的首要条件和最大秘密，是把精力和资历完全集中于所干的事</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xr2qq.com1.z0.glb.clouddn.com/%E6%B2%9F%E9%80%9A%E7%9A%84%E8%89%BA%E6%9C%AF-%E6%9D%8E%E5%85%83%E7%A7%80.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;序言&quot;&gt;&lt;a href=&quot;#序言&quot; class=&quot;headerlink&quot; title=&quot;序言&quot;&gt;&lt;/a&gt;序言&lt;/h2&gt;&lt;p&gt;本来打算读罗纳德·阿德勒著作的《沟通的艺术》，但是微信读书一直没有上架这本书，无奈就选了一本李元秀著作的《沟通的艺术》，读到一半实在读不下去了，都是成段成段的讲道理，读起来实在是乏味。道理谁都懂，关键是得启发别人如何做才行。本文是对本书部分内容的摘录。&lt;br&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="http://yurixu.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="阅读" scheme="http://yurixu.com/tags/%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>2016年读书计划（上）</title>
    <link href="http://yurixu.com/blog/2016/02/29/2016%E5%B9%B4%E8%AF%BB%E4%B9%A6%E8%AE%A1%E5%88%92%EF%BC%88%E4%B8%8A%EF%BC%89/"/>
    <id>http://yurixu.com/blog/2016/02/29/2016年读书计划（上）/</id>
    <published>2016-02-29T04:20:29.000Z</published>
    <updated>2018-05-22T02:15:12.169Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xj5r6.com1.z0.glb.clouddn.com/read.png" alt=""><br><a id="more"></a></p><table class="table table-bordered table-striped table-condensed">   <tr>           <th colspan="4" bgcolor="F5F5F5" style="font-size:15px; padding:5px">2016上半年读书计划</th>        </tr>   <tr>      <td width="20%" style="text-align:center; font-weight:bold">内容</td>      <td width="20%" style="text-align:center; font-weight:bold">月份</td>      <td width="40%" style="text-align:center; font-weight:bold">书单</td>      <td width="20%" style="text-align:center; font-weight:bold">完成情况</td>   </tr>   <tr>      <td rowspan="4" style="text-align:center">PHP</td>      <td width="20%" style="text-align:center">2016年3月</td>      <td width="40%" style="text-align:center">PHP和MySQL Web开发</td>      <td width="20%" style="text-align:center"><label style="background-color:#5CB85C; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">已 读</label></td>   </tr>   <tr>            <td rowspan="3" width="20%" style="text-align:center">2016年4月</td>      <td width="40%" style="text-align:center">PHP核心技术与最佳实践</td>      <td width="20%" style="text-align:center"><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>   </tr>   <tr>      <td width="40%" style="text-align:center">高性能PHP应用开发</td>      <td width="20%" style="text-align:center"><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>   </tr>   <tr>      <td width="40%" style="text-align:center">SQL注入攻击与防御</td>      <td width="20%" style="text-align:center"><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>   </tr>   <tr>      <td rowspan="4" style="text-align:center">MySQL</td>      <td width="20%" style="text-align:center">2016年5月</td>      <td width="40%" style="text-align:center">MySQL入门很简单</td>      <td width="20%" style="text-align:center"><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>   </tr>   <tr>           <td rowspan="3" width="20%" style="text-align:center">2016年6月</td>      <td width="40%" style="text-align:center">MySQL必知必会</td>      <td width="20%" style="text-align:center"><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>   </tr>   <tr>      <td width="40%" style="text-align:center">高性能MySQL:第3版</td>      <td width="20%" style="text-align:center"><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>   </tr>   <tr>      <td width="40%" style="text-align:center">SQL注入攻击与防御</td>      <td width="20%" style="text-align:center"><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>   </tr>   <tr>      <td rowspan="5" style="text-align:center">沟通+理财</td>      <td rowspan="4" width="20%" style="text-align:center">2016年3-4月</td>      <td width="40%" style="text-align:center">学会提问（布朗版）</td>      <td width="20%" style="text-align:center"><label style="background-color:#DAA520; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">暂 停</label></td>   </tr>   <tr>      <td width="40%" style="text-align:center">谁动了我的奶酪</td>      <td width="20%" style="text-align:center"><label style="background-color:#5CB85C; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">已 读</label></td>   </tr>   <tr>      <td width="40%" style="text-align:center">沟通的艺术（李元秀）</td>      <td width="20%" style="text-align:center"><label style="background-color:#5CB85C; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">已 读</label></td>   </tr>   <tr>      <td width="40%" style="text-align:center">如何高效学习</td>      <td width="20%" style="text-align:center"><label style="background-color:#5BC0DE; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">在 读</label></td>   </tr>   <tr>           <td width="20%" style="text-align:center">2016年5-6月</td>      <td width="40%" style="text-align:center">富爸爸穷爸爸</td>      <td width="20%" style="text-align:center"><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>   </tr>   </table><table>   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">PHP和MySQL Web开发(原书第4版)</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xr2qq.com1.z0.glb.clouddn.com/PHP%E5%92%8CMySQL%20Web%E5%BC%80%E5%8F%91.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>Luke Welling / Laura Thomson </td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>714</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="http://book.douban.com/subject/3549421/" target="_blank" rel="external">PHP和MySQL Web开发(原书第4版)</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#5CB85C; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">已 读</label></td>     </tr>   <tr>      <td>书评：</td>      <td></td>   </tr></table><table style="float:left">   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">PHP核心技术与最佳实践</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xr2qq.com1.z0.glb.clouddn.com/PHP%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>列旭松，陈文</td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>522</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="http://book.douban.com/subject/20370984/" target="_blank" rel="external">PHP核心技术与最佳实践</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>     </tr>   <tr>      <td>书评：</td>      <td></td>   </tr></table><table>   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">高性能PHP应用开发</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xr2qq.com1.z0.glb.clouddn.com/%E9%AB%98%E6%80%A7%E8%83%BDPHP%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>Armando Padilla/Tim Hawkins</td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>177</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="http://book.douban.com/subject/6902577/" target="_blank" rel="external">高性能PHP应用开发</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>     </tr>   <tr>      <td>书评：</td>      <td></td>   </tr></table><table>   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">MySQL入门很简单</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xr2qq.com1.z0.glb.clouddn.com/MySQL%E5%85%A5%E9%97%A8%E5%BE%88%E7%AE%80%E5%8D%95.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>黄缙华</td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>466</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="http://book.douban.com/subject/5450806/" target="_blank" rel="external">MySQL入门很简单</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>     </tr>   <tr>      <td>书评：</td>      <td></td>   </tr></table><table>   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">MySQL必知必会</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xr2qq.com1.z0.glb.clouddn.com/MySQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>福塔</td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>241</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="http://book.douban.com/subject/3354490/" target="_blank" rel="external">MySQL必知必会</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>     </tr>   <tr>      <td>书评：</td>      <td></td>   </tr></table><table>   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">高性能MySQL:第3版</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xr2qq.com1.z0.glb.clouddn.com/%E9%AB%98%E6%80%A7%E8%83%BDMysql.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>施瓦茨(Baron Schwartz)等</td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>764</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="http://book.douban.com/subject/23008813/" target="_blank" rel="external">高性能MySQL</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>     </tr>   <tr>      <td>书评：</td>      <td></td>   </tr></table><table>   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">SQL注入攻击与防御</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xr2qq.com1.z0.glb.clouddn.com/SQL%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E5%BE%A1.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>克拉克</td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>359</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="http://book.douban.com/subject/4861648/" target="_blank" rel="external">SQL注入攻击与防御</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>     </tr>   <tr>      <td>书评：</td>      <td></td>   </tr></table><table>   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">如何高效读懂一本书</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xr2qq.com1.z0.glb.clouddn.com/%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E7%9A%84%E8%AF%BB%E6%87%82%E4%B8%80%E6%9C%AC%E4%B9%A6.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>秋叶</td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>244</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="http://book.douban.com/subject/26430442/" target="_blank" rel="external">如何高效读懂一本书</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#5CB85C; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">已 读</label></td>     </tr>   <tr>      <td>书评：</td>      <td><a href="http://yurixu.com/blog/2016/02/23/%E3%80%8A%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E7%9A%84%E8%AF%BB%E6%87%82%E4%B8%80%E6%9C%AC%E4%B9%A6%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/">《如何高效的读懂一本书》读书笔记</a></td>   </tr></table><table>   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">学会提问</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xr2qq.com1.z0.glb.clouddn.com/%E5%AD%A6%E4%BC%9A%E6%8F%90%E9%97%AE.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>布朗</td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>269</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="http://book.douban.com/subject/1504957/" target="_blank" rel="external">学会提问</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#B8860B; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">暂 停</label></td>     </tr>   <tr>      <td>书评：</td>      <td></td>   </tr></table><table>   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">谁动了我的奶酪</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xr2qq.com1.z0.glb.clouddn.com/%E8%B0%81%E5%8A%A8%E4%BA%86%E6%88%91%E7%9A%84%E5%A5%B6%E9%85%AA.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>斯宾塞•约翰逊(Spencer Johnson)</td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>105</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="http://book.douban.com/subject/4722180/" target="_blank" rel="external">谁动了我的奶酪</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#5CB85C; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">已 读</label></td>     </tr>   <tr>      <td>书评：</td>      <td></td>   </tr></table><table>   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">沟通的艺术(李元秀版)</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xr2qq.com1.z0.glb.clouddn.com/%E6%B2%9F%E9%80%9A%E7%9A%84%E8%89%BA%E6%9C%AF-%E6%9D%8E%E5%85%83%E7%A7%80.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>李元秀</td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>245</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="https://read.douban.com/ebook/11445850/" target="_blank" rel="external">沟通的艺术</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#5CB85C; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">已 读</label></td>     </tr>   <tr>      <td>书评：</td>      <td><a href="http://yurixu.com/blog/2016/03/19/%E3%80%8A%E6%B2%9F%E9%80%9A%E7%9A%84%E8%89%BA%E6%9C%AF%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/">《沟通的艺术》读书笔记</a> PS:不建议读，各种摆大道理</td>   </tr></table><table>   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">如何高效学习</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xr2qq.com1.z0.glb.clouddn.com/%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E5%AD%A6%E4%B9%A0.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>[美]斯科特·扬</td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>204</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="http://book.douban.com/subject/25783654/" target="_blank" rel="external">如何高效学习</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#5BC0DE; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">在 读</label></td>     </tr>   <tr>      <td>书评：</td>      <td></td>   </tr></table><table>   <tr>      <th colspan="3" bgcolor="F5F5F5" style="font-size:15px; padding:5px">富爸爸穷爸爸</th>   </tr>      <tr>      <td rowspan="6" width="350px"><img src="http://7xr2qq.com1.z0.glb.clouddn.com/%E5%AF%8C%E7%88%B8%E7%88%B8%E7%A9%B7%E7%88%B8%E7%88%B8.jpg" alt=""></td>      <td width="50px">作者:</td>      <td>[美]罗伯特.T.清崎</td>   </tr>   <tr>      <td>语言:</td>      <td>中文</td>   </tr>   <tr>      <td>页数:</td>      <td>233</td>   </tr>   <tr>      <td>链接:</td>      <td><a href="http://book.douban.com/subject/3291111/" target="_blank" rel="external">富爸爸穷爸爸</a></td>   </tr>   <tr>      <td>状态:</td>      <td><label style="background-color:#777777; color:white; padding:2px 5px 2px 5px; border-radius: 3px;">未 读</label></td>     </tr>   <tr>      <td>书评：</td>      <td></td>   </tr></table>]]></content>
    
    <summary type="html">
    
      2016年上半年读书计划
    
    </summary>
    
      <category term="Read" scheme="http://yurixu.com/categories/Read/"/>
    
    
      <category term="Read" scheme="http://yurixu.com/tags/Read/"/>
    
  </entry>
  
</feed>
